__NUXT_JSONP__("/blog/%E5%8E%9F%E5%9E%8B", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX){return {data:[{article:{slug:"原型",description:"JavaScript 中的原型属性和原型链",title:br,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1492551557933-34265f7af79e?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvdG90eXBlfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",alt:br,tags:[ba],toc:[{id:aB,depth:aj,text:aB},{id:aC,depth:aj,text:aC},{id:aD,depth:aj,text:aD},{id:bs,depth:aj,text:bt},{id:bu,depth:aj,text:bv},{id:aE,depth:aj,text:aE},{id:aF,depth:$,text:aF},{id:aG,depth:$,text:aG},{id:aH,depth:aj,text:aH},{id:aI,depth:$,text:aI},{id:aJ,depth:$,text:aJ},{id:aK,depth:$,text:aK},{id:aL,depth:$,text:aL},{id:aM,depth:$,text:aM},{id:aN,depth:$,text:aN},{id:aO,depth:aj,text:aO},{id:aP,depth:$,text:aP},{id:aQ,depth:$,text:aQ},{id:aR,depth:$,text:aR}],body:{type:"root",children:[{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"每一个 JS 对象（null 除外）都和另一个对象相关联，这“另一个对象”就是原型，每一个对象都从原型继承属性。"}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"比如，通过对象直接量创建的对象，它的原型是 Object.prototype："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F [[prototype]] -\u003E Object.prototype"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"使用两对 [] 括起来的 prototype 属性表示对象的内部私有属性，这是 ES 规范中的表示法。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"通过 new 创建的对象，它的原型是构造函数的 prototype 属性："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F [[prototype]] -\u003E Array.ptototype"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"注意，这个原型有点特殊，它是一个数组。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"通过 Object.create() 创建的对象，它的原型是第一个参数："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:bx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F [[prototype]] -\u003E p:{x:1, y:2}"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"注意，第一个参数如果是 null，那么创建的对象就没有原型属性了。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:aB},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E5%B1%9E%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aB}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"可以使用 Object.getPrototypeOf() 方法获取某个对象的原型"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:bx}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"q"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:" p"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这里需要注意的是，一般来说，我们看到对象的原型属性，既然是属性，就自然而然的认为可以通过属性运算符 . 或者是 [] 来访问属性，但原型属性是无法这么直接访问到的，直接访问到结果是 undefined。"}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F undefined"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:be}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"有一些浏览器，像 Firefox、Chrome 等会通过 "},{type:b,tag:I,props:{},children:[{type:a,value:be}]},{type:a,value:" 这个属性访问到对象的原型："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:be}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F Object.prototype"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这个属性由于浏览器的广泛支持，被写到了 ES 的附录中，这意味着：只有浏览器环境才要支持这个属性，其他实现环境并不需要。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"但我们并不推荐使用这个属性，从两个下划线开头的命名法，我们知道，这意味着它是一个私有属性，在调试代码的时候，"},{type:b,tag:I,props:{},children:[{type:a,value:aS}]},{type:a,value:" 属性比较有用，可以看到更多的信息。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:aS}]},{type:a,value:" 这个属性也是可写的，这意味着给对象添加 "},{type:b,tag:I,props:{},children:[{type:a,value:aS}]},{type:a,value:" 属性相当于在给对象添加原型。比如下面这段代码："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  __proto__"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:"a\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:bf},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"需要注意，如果设置了两个 "},{type:b,tag:I,props:{},children:[{type:a,value:aS}]},{type:a,value:" 属性，会报语法错误，这和普通属性还是有点区别的。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"双下滑线的变量直接出现在代码中，看上去就不够美观。而且一般来说，直接操作私有属性，开发人员都会有一定的抵触情绪。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"ES6 也有推荐的正式方法，它是 setPrototypeOf() 方法。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:aC},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E8%AE%BE%E7%BD%AE%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E5%B1%9E%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aC}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"Object.setPrototypeOf(obj, prototype)"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:bf},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:bf},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这个方法很直观，第一个参数是要设置原型的对象，第二个参数是该对象的新原型，他可以是普通对象，也可以是 null。如果第二个参数不是对象或者 null，则会报 TypeError 错误："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:"123"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F TypeError: Object prototype may only be an Object or null: 123"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"通过这个方法来更改对象的原型，性能比较差，不推荐使用这个方法。如果能使用 Object.create() 方法，就用这个方法吧。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:aD},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E4%B8%BA%E6%9F%90%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aD}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"someObj.isPrototypeOf(anotherObj)"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"a 是一个对象直接量，用 Object.create() 方法创建了一个对象 o，传入的参数是 a，所以 a 是 o 的原型，所以 a.isPrototypeOf(o) 的结果是 true。因为所有对象都是从 Object 对象继承而来的，所以 Object.prototype 也是 o 的原型。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这里强调一下，原型也是一个普通的对象，所以它也有 isPrototypeOf() 方法。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:bs},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E5%AF%B9%E8%B1%A1%E4%B8%AD%E7%9A%84-super-%E5%85%B3%E9%94%AE%E5%AD%97",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:bt}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"ES6 中新增了一个关键字 super，它可以在类中使用，也可以在对象中使用。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"对象中的 super 关键字指向该对象的原型。"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:" obj1 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,n,aq]},children:[{type:a,value:aU}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'method 1'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:" obj2 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,n,aq]},children:[{type:a,value:aU}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"super"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:" obj1"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'method 1'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"上面的代码，先声明了两个对象 obj1 和 obj2，然后通过 setPrototypeOf() 方法将 obj2 对象的原型设置为 obj1，在调用 obj2 对象的 method1() 方法时，它通过 super.method1() 调用了原型上，也就是 obj1 对象上的 method1() 方法。super 关键字不能单独使用，比如不能把它打印出来，会报语法错误。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:bu},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#objectcreateproto-propertiesobject",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:bv}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Object.create() 方法还有第二个参数，它并不是一个普通的对象直接量，而是一个 descriptor，也就是属性描述符。"}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:bh}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,n,bB,bC]},children:[{type:a,value:bB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,aw,l]},children:[{type:a,value:bD}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,n,aq]},children:[{type:a,value:aU}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'A '"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aV}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"color"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aV}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aV}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"desc"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aV}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'.'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:" car "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  color"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"writable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'red'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:"\n  rawDesc"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"writeable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:bj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:bF},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'Porsche boxter'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:"\n  desc"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n    configurable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,aw,l]},children:[{type:a,value:"get"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bG},{type:b,tag:c,props:{className:[d,n,aq]},children:[{type:a,value:aU}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:"toUpperCase"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,aw,l]},children:[{type:a,value:bI}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bJ]},children:[{type:a,value:bK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bG},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bH}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:"toLowerCase"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"car"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'A Red PORSCHE BOXTER.'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"color 和 rawEesc 是数据描述符（Data Descriptor），desc 是存取描述符（Accessor Desctiptor），它有 get() 和 set() 函数。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Object.create() 的第二个参数和 Object.defineProperties(obj, props) 的第二个参数一样。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:aE},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E5%8E%9F%E5%9E%8B%E9%93%BE",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aE}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们已经知道，当声明了一个数组 a 时，它的原型指向了 Array.prototype。注意，不是指向 Array 构造函数，而是指向 Array 构造函数的原型。在 JS 中，一般来说对象都继承自 Object，Array 也不例外。当然有其他特殊情况，没有原型的对象也是存在的。比如使用 Object.create(null) 创建的对象就没有原型。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:aW,props:{alt:"原型_0",src:"\u002Fimg\u002F%E5%8E%9F%E5%9E%8B_0.png"},children:[]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"变量 a 是一个空数组，自己有一个 length 属性，它的原型属性指向 Array.prototype。Array.prototype 也是一个普通对象。和其它对象有点不同的是，它是一个数组。它的 constructor 属性是 Array 构造函数，它还有 length 属性和 concat 方法。它的原型属性指向了 Object.prototype，它也是一个对象，有 constructor 属性是 Object 构造函数，还有一些其它的方法，比如 hasOwnProperty、toString 等。它的原型是 null，就是没有原型了。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"大家有没有觉得这张图似曾相识，它和作用域链十分相似。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:aW,props:{alt:"变量作用域_0",src:"\u002Fimg\u002F%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F_0.png"},children:[]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这里是不同原型对象组成的链，所以它叫原型链。这种链的概念，在整个前端开发，甚至是整个编程领域中都很常见。如果大家学过面向对象，理解这个概念就很容易了，因为它和面向对象的继承非常类似。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aF},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aF}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ax}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bL}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,"method-variable",aw,u,l,m]},children:[{type:a,value:an}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:bd},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bM}]},{type:a,value:"\np2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:bM}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:an}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:" p2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:an}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们先定义了一个 Person 的构造函数，构造函数相当于其它语言中的类，所以约定俗成，构造函数的首字母也要大写。然后给 Person 的原型添加了三个属性，分别是 name、age、sayName，然后我们使用 new 关键字创建了两个实例 p1、p2，调用它们的 sayName 方法，返回的都是 ’john’。通过代码我们可以验证，两个实例的 sayName 是相同的，都是 Person 构造函数的原型属性 sayName。换句话说，原型对象的属性被所有实例共享。如果修改了原型对象的属性，那所有实例的属性都会改变。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"原型属性在设置原型时也可以同时设置，写法上更简单。"}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,aw,l]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:ad,props:{id:aG},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%A4%BA%E6%84%8F%E5%9B%BE",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aG}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:aW,props:{alt:"原型_1",src:"\u002Fimg\u002F%E5%8E%9F%E5%9E%8B_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Person 构造函数有一个自身的普通属性 prototype，指向的是 Person.prototype。它还有一个原型属性，指向的是 Function.prototype，它是一个函数，上面挂载了一些静态方法，比如 call、apply 等。Person.prototype 的 constructor 是 Person 构造函数，Person.prototype 的原型指向的是 Object.prototype。Function.prototype 的原型指向的也是 Object.prototype。实例 p1 和 p2，它们的原型指向的是 Person.prototype。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:aH},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E6%93%8D%E4%BD%9C%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aH}]},{type:a,value:f},{type:b,tag:ad,props:{id:aI},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E5%B1%9E%E6%80%A7%E7%9A%84%E7%89%B9%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aI}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:aW,props:{alt:"原型_2",src:"\u002Fimg\u002F%E5%8E%9F%E5%9E%8B_2.png"},children:[]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们知道在 ES5 版本之前，对象的属性都是可配置、可枚举、可读写的。而在 ES5 中可以控制这些属性。比如把它设置成只读的、设置成不可枚举的等等，还可以设置 getter 和 setter 函数。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aJ},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E6%9F%A5%E8%AF%A2%E5%B1%9E%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"查询属性会沿着对象的原型链一级一级网上查询，知道找到目标属性或者原型是 null 的对象为止。"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"form"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,aY]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"toString"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"在查询 age 属性时，首先查 p1 自身有没有这个属性，结果是没有。然后就去它的原型，也就是 Person.prototype 上面查询，结果是找到了，所以它的值是 23；在查询 from 属性时，p1 自身就有这个属性，值是 'China'；在查询 toString 属性时，p1 自身和它的原型都没有这个属性，接着它会沿着原型链继续查询，也就是 Object.prototype 上查找，结果是找到了。如果沿着原型链，直到顶层对象上页没有找到，则返回 undefined。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aK},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aK}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"首先检测对象是否允许添加属性，如果允许，则在原始对象上创建属性或者更改已有的属性。添加属性操作不会修改原型链。"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,aY]},children:[{type:a,value:aZ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:aX}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 只在 p1 上添加了 from 属性，不会修改 Person.prototype"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"上面的代码成功的给 p1 对象添加了 from 属性，但并不会修改它的原型 Person.prototype。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"只读属性"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'use strict'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ax}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  writable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:bj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:bP},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,aY]},children:[{type:a,value:aZ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'America'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,aY]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'China'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们使用 Object.defineProperty 方法，给 Person.prototype 添加了一个不可写的 from 属性，它的值是 'China'。在给实例 p1 添加 from 属性的时候，首先检测原型链上是否存在这个属性。注意，是整条原型链都会检测，不只是它的父类。比如吧 Person.prototype 换成 Object.prototype 效果是一样的。我们发现在 Person.prototype 上存在这个属性，并且它是不可写入的，所以给实例 p1 添加 from 属性无效，什么事情都不会发生。如果是严格模式，还会报错。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"属性在原型上已存在"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'Hunt'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'Hunt'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'John"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们给实例 p1 设置了一个 name，值是 'Hunt'，这个属性在它的原型 Person.prototype 上已经存在，它的值是 'John'。此时 p1 拥有了自己的 name 属性，它会遮挡原型上的 name。也就是说，此时打印 p1.name，它的值是 'Hunt'，它不会修改原型上的属性。我们打印另一个 p2.name，它的值还是 'John'。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"stter"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"ptototype"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\n  firstName"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:"\n  lastName"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'Smith'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bI}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bJ]},children:[{type:a,value:bK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:" names "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:" values"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:"aplit"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bR}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:"0"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bm}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"lastName"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bm}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'Nicholas Cage'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'Nicholas"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"在给实例 p1 设置 fullName 属性时，在它的原型上，它是一个 setter，那么此时会调用这个 setter 方法，它的作用是分别设置 firstName 和 lastName，所以最终的输出是 'Nicholas'。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aL},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E5%88%A0%E9%99%A4%E5%B1%9E%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aL}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"delete 运算符只能删除对象的自身属性，不能删除从原型继承而来的属性。"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"person"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'John Smith'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'John' 'John Smith'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bT}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bT}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:as}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'John' undefined"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"实例对象 p1 添加了自身属性 fullName，此时 name 和 fullName 分别是 'John' 和 'John Smith'，然后用 delete 运算符将这两个属性删除，再输出 name 和 fullName，分别是 'Jhon' undefined，"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aM},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E6%A3%80%E6%B5%8B%E5%B1%9E%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aM}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"有时候，我们只需要知道对象是否存在某个属性，此时可以使用属性检测的方法。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"可以用过 in、hasOwnProperty、propertyIsEnumerable 等方法来检测属性是否存在。"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bn}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:a_}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bp}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:a_}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:aA}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bU}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:a_}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们使用对象直接量的方法声明了一个对象 o，它有一个 x 属性，我们先使用 in 运算符加测属性是否存在，in 运算符左侧是属性名，右侧是对象。结果发现自身属性 x 和从 Object.prototype 继承而来的 toString 检测结果都是 true，而由于自身和原型链上都不存在 y 属性，所以结果为 false。所以，in 运算符会检测对象的自身属性或者从原型继承而来的属性，那有没有办法区分这两种情形呢，答案是肯定的。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们可以使用对象的 hasOwnProperty 方法："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bp}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:aA}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'trString'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:aA}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"x 和 y 的检测结果与 in 运算符一致，但检测 toString 属性时返回的是 false，因为它是继承属性。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:a$}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"它是 hasOwnProperty 的增强版，是自身属性并且是可枚举时才返回 true。"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:a$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:a$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bp}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:aA}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:a$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:aA}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"检测 x 属性时返回的是 true，因为它是对象的自身属性且是可枚举的。检测 y 属性时检测结果是 false。最后是检测 Object.prototype 对象，结果是 false，虽然它有 toString 方法，但它是不可枚举的，所以结果也是 false。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"一个不易察觉的坑"}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"检测属性时，经常会遇到一个坑，不管是初学者，还是有多年经验的程序员，估计都踩到过这个坑。"}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n,aq]},children:[{type:a,value:bV}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"直接使用 "},{type:b,tag:A,props:{},children:[{type:a,value:"if(o.x)"}]},{type:a,value:" 来判断属性是否存在，这段代码是没问题，但如果 x 的值是 0 或者 false 这些假值的时候，alert 就不会运行了。总不能说 x 的值是 0 的时候，o 就不存在 x 属性吧。然后有同学会这么写："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n,aq]},children:[{type:a,value:bV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:_}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"!=="}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n,bC]},children:[{type:a,value:"undefined"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这也不够准确，因为 x 的值有可能正好是 undefined，所以此时还是要使用 hasOwnProperty 方法。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aN},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E6%9E%9A%E4%B8%BE%E5%B1%9E%E6%80%A7",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aN}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"可以使用 for\u002Fin、Object.keys、Object.getOwnPropertyNames 来枚举对象的属性。"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,K]},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'Jhon Smith'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:bN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bP},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:aX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:"\n  enumerable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:bj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n,aq]},children:[{type:a,value:"for"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:H}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:a_}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:U},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'fullName','name','age'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:"keys"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F [\"fullName\"]"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,S,q]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:"getOwnPropertyNames"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F [\"fullName\",\"from\"]"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"实例 p1 从原型上继承了 name 和 age 属性，当然还从 Object.prototype 上继承了更多属性，它有一个自身的属性 fullName，还有一个自身的属性 from，但它是不可枚举的，for\u002Fin 的结果是 'fullName'、'name'、'age'，它可以枚举自身属性和从原型上继承来的属性，但都必须是可枚举的；Object.keys 方法只返回自身可枚举属性 fullName；而 getOwnPropertyNames 方法返回的是自身属性 fullName 和 from，可枚举和不可枚举的都算。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:aO},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E5%AE%9E%E8%B7%B5%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%9E%8B",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aO}]},{type:a,value:f},{type:b,tag:ad,props:{id:aP},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E6%80%A7%E8%83%BD",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aP}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"查询属性会遍历原型链，有一定的性能问题。要注意代码中的原型链的长度，并在必要时将其分解，以避免潜在的性能问题。"}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"性能问题在绝大多数的开发场景中，我们人类是感受不到的。实际开发中很少需要处理非常庞大的数据量。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aQ},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E5%85%B1%E4%BA%AB%E5%B8%A6%E6%9D%A5%E7%9A%84%E9%97%AE%E9%A2%98",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aQ}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"原型上的属性被所有实例共享，如果属性值是对象类型，则某个实例更改后会影响其他实例，这往往不是实际所期望的效果。"}]}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:"\n  books"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bm}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:W}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:p}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:"push"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"'The Lord of the Rings'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,M,q]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,u,l,m]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\u002F\u002F 'The Lord of the Rings'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"如果原型属性的值是函数，或者是原始类型，那并不存在这个问题。这也是原型的强大之处，原型是把双刃剑，就看怎么使用它了。"}]},{type:a,value:f},{type:b,tag:ad,props:{id:aR},children:[{type:b,tag:L,props:{ariaHidden:J,href:"#%E4%B8%8D%E8%A6%81%E6%89%A9%E5%B1%95%E5%8E%9F%E5%9E%8B",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:aR}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"不要想着去扩展 Object.prototype 或其他内置类型，影响面太大，出错的可能性非常高。"}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"除非你是框架库的作者，对风险有充分的思考和相应的解决方法，不然不要去想这件事情就是对的。"}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002F原型",extension:".md",createdAt:"2021-05-11T13:23:30.654Z",updatedAt:"2021-05-11T13:49:15.458Z"},tags:{javascript:{slug:ba,name:ba}},prev:{slug:bX,title:bX},next:{slug:"JavaScript_中的奇葩假值",title:"JavaScript 中奇葩的假值"}}],fetch:[],mutations:void 0}}("text","element","span","token","punctuation","\n"," ","operator","(",")",".","function","property-access","keyword","p","=","class-name","{","}",":","method",";","comment","string",",","Person","code","alert","div","nuxt-content-highlight","pre","language-js","line-numbers","let","strong","true","number","a","console","Object","prototype",-1,"icon","icon-link","known-class-name","o","\n  ","new","const"," o ","\u002F\u002F true","p1","x",3,"1","\n    ","log","h3","maybe-class-name","boolean","name"," p1 ","\np1",2,"h2","this","23","sayName","\n  name","===","control-flow","\n  age","fullName"," a ","create","getPrototypeOf","function-variable","'john'","'John'"," p1","\u002F\u002F false","获取对象的原型属性","设置对象的原型属性","检测是否为某个对象的原型","原型链","自定义构造函数","原型链示意图","操作对象属性","属性的特性","查询属性","添加属性","删除属性","检测属性","枚举属性","实践中的原型","性能","共享带来的问题","不要扩展原型","proto","method1","return","+","img","'China'","module","from","in","propertyIsEnumerable","javascript","Array"," p ","\n\n","__proto__"," a","setPrototypeOf","Car"," value","false"," p2 ","[","]","'x'"," o","'y'","hasOwnProperty","原型 Prototype","对象中的-super-关键字","对象中的 super 关键字","objectcreateproto-propertiesobject","Object.create(proto[, propertiesObject])"," y","2"," q ","isPrototypeOf","obj2","null","nil","getInfo","' '"," configurable","\n      ","rawDesc","set","parameter","value","age","\u002F\u002F 'john'","defineProperty","'from'","\n  value","p2","firstName"," names","delete","'toString'","if","books","全屏布局")));
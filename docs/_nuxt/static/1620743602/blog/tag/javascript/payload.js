__NUXT_JSONP__("/blog/tag/javascript", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do_,dp,dq,dr,ds,dt,du,dv,dw,dx,dy,dz,dA,dB,dC,dD,dE,dF,dG,dH,dI,dJ,dK,dL,dM,dN,dO,dP,dQ,dR,dS,dT,dU,dV,dW,dX,dY,dZ,d_,d$,ea,eb,ec,ed,ee,ef,eg,eh,ei,ej,ek,el,em,en,eo,ep,eq,er,es,et,eu,ev,ew,ex,ey,ez,eA,eB,eC,eD,eE,eF,eG,eH,eI,eJ,eK,eL,eM,eN,eO,eP,eQ,eR,eS,eT,eU,eV,eW,eX,eY,eZ,e_,e$,fa,fb,fc,fd,fe,ff,fg,fh,fi,fj,fk,fl,fm,fn,fo,fp,fq,fr,fs,ft,fu,fv,fw,fx,fy,fz,fA,fB,fC,fD,fE,fF,fG,fH,fI,fJ,fK,fL,fM,fN,fO,fP,fQ,fR,fS,fT,fU,fV,fW,fX,fY,fZ,f_,f$,ga,gb,gc,gd,ge,gf,gg,gh,gi,gj,gk,gl,gm,gn,go,gp,gq,gr,gs,gt,gu,gv,gw,gx,gy,gz,gA,gB){return {data:[{articles:[{slug:du,description:"JavaScript 原始类型和对象类型",title:du,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1617038797996-ec58f390875b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&q=80",alt:du,tags:[aT],toc:[{id:eb,depth:_,text:ec},{id:bZ,depth:_,text:bZ},{id:bv,depth:af,text:bv},{id:b_,depth:_,text:b_},{id:ed,depth:af,text:bv},{id:b$,depth:af,text:b$}],body:{type:a_,children:[{type:b,tag:$,props:{id:eb},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#javascript-%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ec}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在 JS 中，数据类型分为原始类型和对象类型。\n"},{type:b,tag:bw,props:{alt:ee,src:"\u002Fimg\u002F%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B_0.png"},children:[]}]},{type:a,value:f},{type:b,tag:$,props:{id:bZ},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:bZ}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"原始类型的值无法更改。比如我们想更改数值和布尔，这本身就说不通。但对于字符串来说，它们看起来是由字符组成的数组，所以想当然的会期望通过指定索引来修改字符串中的字符，实际上这是做不到的。我们来看一下这段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'use strict';"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:ef}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'a'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F abc"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"想把字符串中的第二个字符改为 a ，但实际输出还是 abc 。如果是严格模式，还会报语法错误。大家以后会感觉到，严格模式很多时候就是用来阻止这种看似正常，实际却是有问题的行为的。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"字符串中的所有方法返回的都是一个新的字符串，并不会修改原来的字符串。我们来看一下这段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" s "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'ABC'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\ns"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:eh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"s"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'ABC'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比如我们声明了一个变量 ABC ，它是大写的。然后我们调用 toLowerCase 把它转成小写，最后输出的 s 还是大写的 ABC ，它并不会修改原来字符串的值。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:bv},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E7%9B%B8%E7%AD%89%E6%AF%94%E8%BE%83",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:bv}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比较原始类型是否相等，是比较它们的值。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"原始类型的比较是值的比较，只有它们的值相等，它们才相等。"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" n1 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ca}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" n2 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:bH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ca}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"n1 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:" n2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" s1 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:ef}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" s2 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:bI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'ab c'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"s1 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:" s2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"上面这段代码，变量 n1 和 n2 它们的值都是 123 ，所以它们是相等的。如果是比较两个字符串是否相等，当且仅当它们的长度相等，并且每个索引的字符都相等时，它们才相等。变量 s1 的值是 abc ，s2 的值是 ab(空格)c ，所以它们是不相等的。"}]},{type:a,value:f},{type:b,tag:$,props:{id:b_},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:b_}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"对象类型的值是可以修改的。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:bJ}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ei},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ah}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ei},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cb}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F {x: 2, y: 3}"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:dv}]},{type:a,value:cc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F {y: 3}"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们定义了一个对象 o ，它有一个属性 x ，它的值是 1 。我们可以修改 x 的值，把它改成 2 ，也可以添加另外的属性比如说 y ，我们也可以把 x 属性删除。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比如数组，我们可以通过索引来修改相应位置的值："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:eg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"4"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [1, 4, 3]"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:ag,props:{id:ed},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E7%9B%B8%E7%AD%89%E6%AF%94%E8%BE%83-1",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:bv}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比较对象是否相等，不是比较它们的值。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"对象类型的比较并不是按值比较的，即使两个对象完全一样，或者是元素完全一样的数组，它们都是不相等的。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"记住，没有两个对象是相等的。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比如，我们来看一下这段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:ej},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:ek},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" a1 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:" a2 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:el},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:em},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"a1 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:" a2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"o1 是一个对象，它有一个属性 x ，它的值是 1 ，o2 也是一样的。比如还有两个变量 a1 和 a2 这两个数组，它们的元素都是 1 2 3 。但是，o1 o2 不相等，a1 a2 也不相等。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"那对象类型是如何比较相等的呢？下面我们就来讨论这个问题。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:b$},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%90%8D%E5%AD%97",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:b$}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"对象类型又叫引用类型（reference type），当给一个变量赋值为对象时，该变量保存的是该对象在内存中的地址。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"对象的比较是在比较引用地址：当且仅当它们引用的是同一个对象时，（意味着它们的值都是一样的，也就是都是这个对象的内存地址）它们才相等。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:bJ}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:ej},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:ek},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:" o1"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\no2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cb}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"o1"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:en}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:el},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:em},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"将只有一个 x 属性的对象赋值给变量 o1 ，那只是把这个对象在内存中的地址赋给了这个变量，此时再将 o1 赋值给变量 o2 ，o2 的值也是 o1 所引用对象的内存地址，它们俩指向的是同一个对象。此时，如果修改了 o2 ，其实就是在修改内存中的对象({x: 1})，因为 o1 也指向的是这个对象，所以 o1.y 的值也是 2."}]}]},dir:bm,path:"\u002Farticles\u002F原始类型和对象类型",extension:a$,createdAt:"2021-05-11T06:19:39.200Z",updatedAt:"2021-05-11T07:53:48.082Z"},{slug:dw,description:"闭包相关知识——面试必考！",title:dw,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1620655796542-4ac76a76743c?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwxOXx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",alt:dw,tags:[aT],toc:[{id:cd,depth:af,text:cd},{id:ce,depth:_,text:ce},{id:eo,depth:af,text:ep}],body:{type:a_,children:[{type:b,tag:k,props:{},children:[{type:a,value:"闭包是初级前端面试题必考的内容。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"闭包是指访问了另外一个作用域中的变量的函数。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F ******* 闭包 start *******"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:a,value:eq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F ******* 闭包 end *******"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"函数 bar() 访问了它的上级作用域，也就是 foo() 函数作用域中的变量 a，它就是一个闭包。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"下面是闭包的一些应用。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:cd},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E9%98%BB%E6%AD%A2%E5%8F%98%E9%87%8F%E8%A2%AB%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cd}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:a,value:eq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" bar "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在运行完 foo() 函数后，它里面的局部变量 a 并没有被垃圾回收，因为最后返回的匿名函数对它有引用，它们构成了一个闭包。"}]},{type:a,value:f},{type:b,tag:$,props:{id:ce},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E9%97%AD%E5%8C%85%E5%BA%94%E7%94%A8%E7%A4%BA%E4%BE%8B",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ce}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:cf},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"        \n    "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这段代码输出了 10 个 10，因为等到执行 console.log 的时候，for 循环已经执行结束了，i 的值是 10，所以再执行 setTimeout 输出 i，它的值就是 10。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"可以使用闭包来解决这个问题："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bx]},children:[{type:a,value:er}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:cf},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n                "},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:er},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:cf},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们声明一个函数 bar()，将 i 通过参数传递给 bar() 函数。前面已经说过了，数值类型传参时是拷贝的，最终计时器输出的是 0~9。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"把 bar() 函数拿到 foo() 函数外面可能就更好理解了："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bx]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aN}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们声明了 bar() 函数，又立即调用了它。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"另外还可以使用立即执行函数表达式，这里就不再演示了。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"和这个问题类似的，是给一组 DOM 元素绑定事件，面试中经常会问，两个问题是一样的，就不再多说了："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" lis "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,dx,bo]},children:[{type:a,value:"document"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:"getElementsByClassName"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'li.item'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:" lis"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"length"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n    lis"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,es,bp,u,l,o]},children:[{type:a,value:"onclick"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:ag,props:{id:eo},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E9%97%AD%E5%8C%85--%E7%AB%8B%E5%8D%B3%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%9A%E5%B0%81%E8%A3%85%EF%BC%88%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%EF%BC%89",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ep}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"封装是为了信息隐藏，也就是隐藏那些不想被外界访问的内容。"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n    name"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:cg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:cg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们可以通过 obj.getName() 方法访问它的 name 属性，但是，我们无法阻止 obj 的使用者直接通过 obj.name 访问 name 的值。"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 无法阻止用户直接访问 obj.name"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们想要隐藏 name 的信息，让外界只能通过 getName() 访问，可以使用闭包和立即执行函数完成这个功能："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:" name "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bq}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:cg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:cf},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:" name\n        "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 只能通过 getName 方法访问"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:cg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F john"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 无法直接访问 obj.name"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:et}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"立即执行函数返回的是一个对象，这个对象只有一个方法 getName()，我们用 obj 来保存这个对象，所以立即执行函数中的 name 变量，就相当于 obj 对象的私有变量一样，外界是无法直接访问到的，只能通过 getName() 来访问。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这在 JS 编程中是一个很重要的技巧，叫模块模式，它可以把所有不必要暴露在外部的内容全部封装在内部，对外只提供一些公开方法来访问模块内部的内容。"}]}]},dir:bm,path:"\u002Farticles\u002F闭包",extension:a$,createdAt:"2021-05-11T07:50:37.996Z",updatedAt:"2021-05-11T08:21:45.971Z"},{slug:dy,description:"了解变量作用域相关知识",title:dy,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1614213671535-a82e778bc06a?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwyMnx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60",alt:dy,tags:[aT],toc:[{id:ch,depth:_,text:ch},{id:ci,depth:_,text:ci},{id:eu,depth:af,text:ev},{id:ew,depth:af,text:ex},{id:ey,depth:af,text:ez},{id:eA,depth:_,text:eB},{id:cj,depth:af,text:cj},{id:eC,depth:af,text:eD},{id:eE,depth:_,text:eF},{id:ck,depth:_,text:ck},{id:cl,depth:_,text:cl},{id:cm,depth:_,text:cm},{id:cn,depth:_,text:cn},{id:co,depth:_,text:co},{id:eG,depth:_,text:eH},{id:cp,depth:_,text:cp},{id:cq,depth:af,text:cq},{id:bL,depth:af,text:bL}],body:{type:a_,children:[{type:b,tag:$,props:{id:ch},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%AE%80%E4%BB%8B%EF%BC%88scope%EF%BC%89",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ch}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"作用域是编程领域的通用概念，并不是 JS 特有的，我们先来看一些基本概念："}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:bo}]},{type:a,value:"：变量，值的符号名称。变量的名字叫标识符（identifier）。如 let x = 1; 中 x 就是变量。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:bM}]},{type:a,value:"：值，即数据，比如字符串、数值、函数等。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"name binding"}]},{type:a,value:"：变量和值所建立的联系，如 let x = 1;。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"scope"}]},{type:a,value:"：作用域，值代码中 name binding 的有效范围。比如在这个区块的代码中，变量 x 的值是 1，在另外一个区块的代码中，变量 x 的值是 2。"}]},{type:a,value:f},{type:b,tag:$,props:{id:ci},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%88%86%E7%B1%BB",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ci}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"作用域分为静态作用域（static scope）和动态作用域（dynamic scope），静态作用域又叫 lexical scope ，中文翻译为词法作用域。我们先来看两个对应的示例："}]},{type:a,value:f},{type:b,tag:ag,props:{id:eu},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%A4%BA%E4%BE%8B%EF%BC%88c%EF%BC%89%EF%BC%9A%E9%9D%99%E6%80%81%E4%BD%9C%E7%94%A8%E5%9F%9F",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ev}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,"language-c"]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,"macro","property"]},children:[{type:b,tag:c,props:{className:[d,"directive-hash"]},children:[{type:a,value:"#"}]},{type:b,tag:c,props:{className:[d,"directive",m]},children:[{type:a,value:"include"}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"\u003Cstdio.h\u003E"}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bN}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bN}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ax}]},{type:a,value:dz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bN}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:cr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bN}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:dA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bN}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"main"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:eI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"\"%d\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:cr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:eI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:eJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这是一段 C 语言代码，C 语言使用的是静态作用域，代码先声明了一个整型变量 x，它的值是 10，然后声明了两个函数 f() 和 g()，在执行 main() 函数的时候，调用了函数 g()，函数 g() 声明了一个变量 x，它的值是 20，然后它调用了函数 f()，并返回函数的调用结果，函数 f() 返回了 x 的值，它返回的是最开始声明的那个 x 的值，也就是 10，并不是在函数 g() 中声明的那个 x。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:ew},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%A4%BA%E4%BE%8B%EF%BC%88perl%EF%BC%89%EF%BC%9A%E5%8A%A8%E6%80%81%E4%BD%9C%E7%94%A8%E5%9F%9F",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ex}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,"language-perl"]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,bo]},children:[{type:a,value:dB}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:eK}]},{type:a,value:eL}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bo]},children:[{type:a,value:dB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:eK}]},{type:a,value:eM}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"local"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bo]},children:[{type:a,value:dB}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:dA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:ax}]},{type:a,value:eL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"print"}]},{type:a,value:eM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:eJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这是一段 Perl 语言代码，Perl 既可以使用静态作用域，也可以使用动态作用域。这段代码它使用的是动态作用域，代码的逻辑和之前的 C 语言是一抹一样的。但在函数 f 中返回的是在函数 g 中定义的 $x，即最终返回的是 20。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"在静态作用域中，如果函数中的变量，没有在该函数中定义（即它不熟函数的局部变量，也不是形参），就去"},{type:b,tag:U,props:{},children:[{type:a,value:"定义"}]},{type:a,value:eN}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"在动态作用域中，如果函数中的变量，没有在该函数中定义，就去"},{type:b,tag:U,props:{},children:[{type:a,value:"调用"}]},{type:a,value:eN}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"注意，一个是"},{type:b,tag:U,props:{},children:[{type:a,value:"定义该函数"}]},{type:a,value:"，一个是"},{type:b,tag:U,props:{},children:[{type:a,value:"调用该函数"}]},{type:a,value:cs}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"静态作用域，也叫词法作用域，代码写完后，变量的作用域就已确定不变。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"不变的另一个名字就叫静态，所以叫静态作用域。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"动态作用域，代码写完后，变量的作用域还无法确定，它和调用它所在的函数有关。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这么听起来，使用动态动态作用域的代码，复用程度更高，因为变量在不同的调用中有不同的含义和值，但复杂度也增加了。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"静态作用域在编程语言中占了统治地位，比如 C、C++、C#、JAVA、Go 语言都使用了静态作用域，这也比较好理解，因为静态作用域更方便调试，也更好理解。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"JavaScript 也使用静态作用域，下面我们把前面的代码翻译成 JavaScript 的代码："}]},{type:a,value:f},{type:b,tag:ag,props:{id:ey},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%A4%BA%E4%BE%8B%EF%BC%88javascript%EF%BC%89%EF%BC%9A%E9%9D%99%E6%80%81%E4%BD%9C%E7%94%A8%E5%9F%9F",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ez}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:dz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:cr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:dA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:cr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"最终输出的结果是 10。"}]},{type:a,value:f},{type:b,tag:$,props:{id:eA},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F%EF%BC%88block-scope%EF%BC%89",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:eB}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"块级作用域是指变量在指定块的作用域外部无法被访问，它位于一对花括号中。语法和 var 语句一样，只是它使用 let 或者 const 来声明。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:bJ}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:dC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:dC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:en}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:cb},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 1"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"最后输出的 x 的值是 2，他在 if() 语句块外面也能访问到。输出的 y 的值是 1，if() 语句块中的声明不会影响到语句块外面的值。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:cj},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E7%A6%81%E6%AD%A2%E9%87%8D%E5%A4%8D%E5%A3%B0%E6%98%8E",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cj}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"如果变量在语句块中已经有定义，则无法再使用 let 或者 const 进行重复声明，会报语法错误。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:bJ}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F Uncaught SyntaxError: Identifier 'x' has already been declared"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"注意，这只限制在同个块中，如果是在不同块中是没有问题的。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比如下面这段代码就没有什么问题："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"大家看到这里可能会有疑问，那到底在实际工作中应该使用 var 还是使用 let，还是两者都使用？首先，两者混用是毫无道理的，但是这在实际代码中经常出现。这一方面就是粗心大意导致的，另外一方面可能是只重构了部分代码。但是，var 和 let 混用是不能被原谅的行为。本文最后有一个最佳实践，会再来讨论该用什么方式来声明变量。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:eC},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#const-%E5%A3%B0%E6%98%8E",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:eD}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"使用 const 声明的原始类型，是常量，之后不能更改，不然会报类型错误。使用 const 声明的对象类型变量，变量本身无法赋值为其它类型，但它的属性可以修改。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比如下面这两段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F const x = {};"}]},{type:a,value:"\nx "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:eO}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\nx"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:dD}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"第一段代码使用 const 声明了变量之后，不管是 1 还是空对象，之后再想把 x 更改为 2，是不可以的。第二段代码使用 const 声明 x 为一个空对象，之后可以给它添加属性，是没有任何问题。那有没有办法让一个对象的属性也无法改变呢？我们可以使用 Object.freeze() 方法，比如下面这段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:eP}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:"freeze"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"\nobj"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"prop"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ca}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"使用 Object.freeze() 方法，参数是一个空对象，创建一个变量 obj，之后再修改 obj 的话，默认是没有效果的。如果是在严格模式下，还汇报 TypeError 错误。"}]},{type:a,value:f},{type:b,tag:$,props:{id:eE},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%9A%82%E6%97%B6%E6%80%A7%E6%AD%BB%E5%8C%BA%EF%BC%88temporal-dead-zone-tdz%EF%BC%89",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:eF}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"很对书籍和文章都会说，const 和 let 声明的变量不会提升，我们来分析一下下面这段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:eQ}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F ReferenceError: x is not defined"}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:eQ}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 if 语句块中的用 let 声明的变量 x 没有提升，那在它前面输出 x 时，应该找到 if 语句块外面那个全局变量 x 才对。但事实上它会报一个 ReferenceError 的错误，说 x 没有被定义。所以说，x 没有提升，这是不大准确的。提升的行为我们很好理解，但大家想过这用代码来实现是如何做到的吗？其实提升就在引擎在运行语句块前，会把块中的所有变量提前放到内存中去，上面这段代码之所以报了错，是因为引擎已经提前知道了下面有使用 let 声明的 x 了，所以提升的行为是存在的。这种情况要报错，这是 ES 规范规定的。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"在使用 let 声明的变量 x 语句，到块的顶部这段区域，称为变量 x 的暂时性死区，在这个区块中的所有代码不能访问 x。"}]}]},{type:a,value:f},{type:b,tag:$,props:{id:ck},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E4%B8%AD%E7%9A%84%E5%9D%97%E7%BA%A7%E7%BB%91%E5%AE%9A",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ck}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"下面我们来学习一下，循环语句中的块级绑定。我们先来看这个循环语句："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bO}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 3"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"很多初学者都会遇到这个问题，就是循环结束后，还可以访问到变量 i 的值，它的值是 3。一般来说，for() 循环中的这个迭代变量 i，在 for() 语句之外是不会用到的。我们可以使用 let 来声明变量 i，这样在 for() 语句之外就无法访问到变量 i 了："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bO}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F Uncaught ReferenceError: i is not defined"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:$,props:{id:cl},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cl}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们再来看一个很常见的问题，这个问题也困扰了相当多的初学者。比如下面这段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bz,h]},children:[{type:a,value:bA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们在循环中调用了 setTimeout() 计时器方法，让它输出 i。直觉来看它应该输出 0， 1， 2，但实际上它输出的是三个 3。因为等到 setTimeout() 中的函数被调用时，for() 循环已经运行结束了，变量的 i 值已经是 3 了，所以输出的是三个 3。这里的计时器在实际工作中很可能是一个　 ajax 异步调用，原理是一样的。很多开发人员，会使用一个立即执行函数表达式来解决这个问题，关于什么是立即执行函数表达式，会在函数进阶文章中再来介绍。总之，这个函数是可以立即执行的："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bx]},children:[{type:a,value:bM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bz,h]},children:[{type:a,value:bA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这在 ES6 之前也确实没有什么好的办法，ES 规范的制定者们也考虑到了这个问题，规范明确规定：可以使用 let 来解决这个问题。只要把 var 换成 let 就可以了："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bz,h]},children:[{type:a,value:bA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在使用 let 声明变量 i 后，在每次迭代中，都会创建一个新的同名变量，并对其进行初始化，效果是和使用立即执行表达式是一样的，但它的写法更简单。这种方法在 for(in) 和 for(of) 循环中是同样适用的："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:dE},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:eR},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bB}]},{type:a,value:eS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bz,h]},children:[{type:a,value:bA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:a,value:eT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:$,props:{id:cm},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E4%B8%AD%E7%9A%84%E5%B8%B8%E9%87%8F%E5%A3%B0%E6%98%8E",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cm}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"那是不是可以使用 const 来声明循环变量 i 呢？在 for() 循环中，可以在初始化的时候使用 const，但在运行 i++ 语句时会报错，因为这是在尝试修改它的值，所以这个循环只能运行一次："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aQ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:eO}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bz,h]},children:[{type:a,value:bA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在 for(in) 和 for(of) 语句中可以使用 const，效果和使用 let 是一样的："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:dE},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:eR},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bB}]},{type:a,value:eS},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bz,h]},children:[{type:a,value:bA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:by},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:a,value:eT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:$,props:{id:cn},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%85%A8%E5%B1%80%E5%9D%97%E7%BA%A7%E7%BB%91%E5%AE%9A",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cn}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"使用不同的方式声明变量，对全局变量也有不同的影响。使用 var 声明的变量会成为全局对象的属性，意味着可能会无意覆盖已存在的全局属性。而用 let 和 const 声明的全局变量，不会添加到全局对象上。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比如这两段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ct}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:eU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,dx,bo]},children:[{type:a,value:eV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ct}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'json'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ct}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:eU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,dx,bo]},children:[{type:a,value:eV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ct}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F '[object Object]'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们先用 var 声明了一个变量 JSON，那它会覆盖全局对象上的属性 JSON，它是一个内置的属性。如果用 let 声明这个变量，就不会有这个问题了。"}]},{type:a,value:f},{type:b,tag:$,props:{id:co},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:co}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"那到底使用哪种方式声明变量更合适呢？我们应该优先使用 const 来声明变量，如果确定变量之后会被更改的话，再使用 let。大部分变量在初始化之后就应该保持不变，因为预期外的改动很容易出现 BUG。我们要避免使用 var。当然这一切的前提是软件的运行环境要支持 ES6，不然都是空谈。"}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"优先使用 const。"}]}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"如果之后会改变，则使用 let。"}]}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"避免使用 var。"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:$,props:{id:eG},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%EF%BC%88scope-chain%EF%BC%89",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:eH}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这是一段示例代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:eW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:dC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:eX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:" z "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:"15"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:dE},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:eX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们来看一下 "},{type:b,tag:y,props:{},children:[{type:a,value:"console.log(x, y, z);"}]},{type:a,value:" 这段代码：。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:bw,props:{alt:ee,src:eY},children:[]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在执行这条语句时，它会在函数 f_1() 的作用域中依次查找变量 x，y 的值，在 f_1() 中没有找到 x，就到它的上一层作用域——也就是函数 f() 的作用域中去查找。在函数 f() 中也没有找到 x，就再到它的上一层作用域，这里呢就是全局作用域中去查找了。结果是找到了。接下来是查找 y，z，过程和查找 x 是一样的。在这个过程中，只要一个变量没有找到定义，就会报错。在查找变量的时候，它是一层一层往上查找的，先是函数 f_1()，然后是函数 f()，最后是全局作用域。全局作用域就没有外层作用域了。大家看这个红色的箭头，它的组成很像一条链，所以这些作用域的组成就叫作用域链。是不是很形象。函数 f_1() 的作用域链包括：它自身的作用域 + f() 的作用域 + 全局作用域。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"在 JS 的最顶层代码中（也就是不包含在函数作用域，或者是块级作用域中的代码），作用域链由一个全局对象组成，这个全局对象可以通过 this 访问到。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"在没有被嵌套的的作用域中（比如在一个函数中，或者是在一对花括号组成的块级作用域中），作用域链上有两个对象，第一个是包含局部变量的对象（如果实在函数中，这个对象还包括了函数的参数，以及 Arguments 对象），第二个是全局对象。前者无法被 JS 代码访问到，是不可见的内部实现。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"在被嵌套的作用域中，作用域链上最少有三个对象（具体有几个对象，要看它被嵌套的层数了）。"}]}]},{type:a,value:f},{type:b,tag:$,props:{id:cp},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E5%BB%B6%E9%95%BF",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cp}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"有些语句可以在作用域链的前端临时增加一个变量对象（variable object），该变量对象在代码执行完后被移除。有两种情况："}]}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"try-catch 语句中的 catch 块"}]}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"with 语句"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ag,props:{id:cq},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#try-catch",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cq}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"catch 语句会创建一个新的变量对象，它的值是被抛出的错误对象。在代码进入 catch 语句时，这个错误对象被添加到作用域链的顶端，当执行完 catch 语句时，该对象不再可用。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这在 JS 中是一个特殊的情况，它不能被称之为块级作用域，比如下面这段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:" e "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:eW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:"try"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  e "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:"catch"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:eZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:"dir"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:eZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F ReferenceError: y is not defined"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F     at \u003Canonymous\u003E:3:3"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F message: \"y is not defined\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F stack: \"ReferenceError: y is not defined at \u003Canonymous\u003E:3:3\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F __proto__: Error"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在 try 语句中引用了一个没有被声明的变量 y，它会报错，进入到 catch 语句块中，此时会在当前的作用域链顶端添加一个错误对象 e，我们可以把它输出出来，它有 message 和 stack 这两个属性。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:bL},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#with",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:bL}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"with 可将某个对象添加到作用域链的顶端，然后执行 with 语句块中的代码，执行完后会把作用域链回复到原来的状态。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:bJ}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[H,I]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bx]},children:[{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:dz},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 1, 3"}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 2, 3"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在执行 f 函数的时候，里面有一条 with 语句，它会把 foo 对象添加到作用域链的顶端，在语句块中输出 x 和 y 的时候，首先它会在 foo 对象上查找有没有 x 和 y 属性，对象 Foo 正好有一个 x 属性，所以 x 的值是 1，但 foo 没有 y 属性，所以会沿着作用域链往上查找，此时查找的是参数 y，在调用 f 的时候传入的是 3，所以这里输出的 y 也是 3。执行完 with 语句后，作用域链会恢复到原来的状态，此时再输出 x 和 y 的值，它们都是调用函数 f 时传入的，所以它们的值分别是 2 和 3。因为 with 语句块中的变量只有在运行时才能确定，引擎无法提前进行优化，所以在严格模式下禁止使用 with 语句。可以换一种写法，就是用一个局部变量先把对象保存起来，再在语句块中访问这个变量的相应属性就可以了。"}]}]},dir:bm,path:"\u002Farticles\u002F变量作用域",extension:a$,createdAt:"2021-05-11T08:04:05.687Z",updatedAt:"2021-05-11T08:16:02.440Z"},{slug:dF,description:"JavaScript 的隐式类型转换是个大坑！",title:dF,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1620421680906-275860f61e27?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwyNnx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60",alt:dF,tags:[aT],toc:[{id:cu,depth:_,text:cu},{id:cv,depth:_,text:cv},{id:cw,depth:_,text:cw},{id:cx,depth:af,text:cx},{id:e_,depth:af,text:e$},{id:fa,depth:af,text:fb},{id:cy,depth:af,text:cy}],body:{type:a_,children:[{type:b,tag:$,props:{id:cu},children:[{type:b,tag:z,props:{href:"#%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%BB%8B%E7%BB%8D",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cu}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在 JS 中，当运算符在运算时，如果两边数据不统一，CPU 就无法计算，这时我们编译器会自动将运算符两边的数据做一个数据类型转换，转成一样的数据类型再计算。这种无需手动转换，而由编译器自动转换的方式就称为"},{type:b,tag:J,props:{},children:[{type:a,value:"隐式转换"}]},{type:a,value:cs}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"例如："},{type:b,tag:y,props:{},children:[{type:a,value:"1 \u003E \"0\""}]},{type:a,value:" 这行代码在 JS 中并不会报错，编译器在运算时会先把右边的 \"0\" 转换成数字 0 再比较大小。"}]},{type:a,value:f},{type:b,tag:$,props:{id:cv},children:[{type:b,tag:z,props:{href:"#%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cv}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"转成 string 类型："}]},{type:a,value:f},{type:b,tag:bP,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"字符串连接符：+"}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"转成 number 类型："}]},{type:a,value:f},{type:b,tag:bP,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"自增自减运算符：++、--"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"算术运算符：+、-、*、\u002F、%"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"关系运算符：\u003E、\u003C、\u003E=、\u003C=、==、!=、===、!=="}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"转成 boolean 类型："}]},{type:a,value:f},{type:b,tag:bP,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"逻辑非运算符：!"}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:$,props:{id:cw},children:[{type:b,tag:z,props:{href:"#%E9%9D%A2%E8%AF%95%E5%A4%A7%E5%9D%91%E6%80%BB%E6%B1%87",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cw}]},{type:a,value:f},{type:b,tag:ag,props:{id:cx},children:[{type:b,tag:z,props:{href:"#%E7%AC%AC%E4%B8%80%E5%9D%91%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E7%AC%A6%E4%B8%8E%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99%E6%B7%B7%E6%B7%86",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cx}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:fc}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fd}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 扩充部分"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:dG}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"\"1true\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"\"\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:dH}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:cz}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"此类问题的坑是：将字符串连接符（只要 + 号两边有一边是字符串）与算术运算符（+ 号两边都不是类字符串）的隐式转换搞混淆。"}]},{type:a,value:f},{type:b,tag:bP,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"字符串运算符：会把其他数据类型调用 String() 方法转成字符串然后拼接。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"算术运算符：会把其他数据类型调用 Number() 方法转成数字然后做加法计算。"}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fd}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F + 是字符串连接符"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F String(1) + \"true\" -\u003E \"1\" + \"true\" -\u003E \"1true\""}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:dI}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 1 + Number(true) -\u003E 1 + 1 -\u003E 2"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:dI}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 1 + Number(undefined) -\u003E 1 + NaN -\u003E NaN"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:dI}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 1 + Nubmer(null) -\u003E 1 + 0 -\u003E 1"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"扩充部分"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"先谈谈为什么会有这种问题，这是因为js的弱类型导致的，js的弱类型，导致js的隐式类型转换频繁。比如像 {} + []，[] + {}，你完全不能去预测它的类型。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"先来看一条在js里的隐式的 rule，js在进行加法运算的时候， 会先推测两个操作数是不是number。\n如果是，则直接相加得出结果。\n如果其中有一个操作数为string，则将另一个操作数隐式的转换为string，然后进行字符串拼接得出结果。\n如果操作数为对象或者是数组这种复杂的数据类型，那么就将两个操作数都转换为字符串，进行拼接\n如果操作数是像boolean这种的简单数据类型，那么就将操作数转换为number相加得出结果"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"知道了这些规则的话就简单多了"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"先来看第一个[] + []，这是两个复杂数据结构相加的例子，按照上面的rule，我们先将两个操作数转换为string，然后进行拼接，于是"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [] -\u003E \"\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F \"\" + \"\" -\u003E \"\""}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"再看第二个 [] + {}，和第一个是类似的。"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [] -\u003E \"\"， {} -\u003E \"[object Object]\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F \"\" + \"[object Object]\" -\u003E \"[object Object]\""}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"再来看第三个 {} + []，这也是两个复杂数据结构相加的例子，看样子与前两个没有什么差别，按理说也应该是 \"[object Object]\"，但是你相加的时候你会发现，得出的答案是 0！"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这是为什么呢？"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"原因是有的js解释器会将开头的 {} 看作一个代码块，而不是一个js对象，于是真正参与运算的是 + []，就是将 [] 转换为number，于是得出答案 0。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"那么我们如何证明{}被看作一个代码块而不是一个js对象呢？很简单，我们可以在{}里写上一些语句，比如"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'hello'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F hello"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 0"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:ag,props:{id:e_},children:[{type:b,tag:z,props:{href:"#%E7%AC%AC%E4%BA%8C%E5%9D%91%EF%BC%9A%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%9A%E6%8A%8A%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E6%88%90-number-%E4%B9%8B%E5%90%8E%E5%9C%A8%E6%AF%94%E8%BE%83%E5%85%B3%E7%B3%BB",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:e$}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:fc}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:cA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:cA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fe}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:cB}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:ff}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fg}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:cB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:dG}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F WTF"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F ??"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F ????????"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:cz}]}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"当关系运算符两边有一边是字符串的时候，会将其他数据类型使用 Number() 转换，然后比较关系。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"当关系运算符两边都是字符串的时候，此时同时转换成 number 然后比较关系。"},{type:b,tag:J,props:{},children:[{type:a,value:"重点：此时并不是按照 Number() 的形式转成数字，二是按照字符串对应的 unicode 编码来转成数字。"}]}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:cA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F Number(\"2\") \u003E 10 -\u003E 2 \u003E 10 -\u003E false"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 使用 charCodeAt() 方法可以查看字符的 unicode 编码，默认返回字符串中第一个字符的编码，如果想要查询第二个字符可以传参下标"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:cA}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fe}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F \"2\".charCodeAt() \u003E \"1\".charCodeAt() -\u003E 50 \u003E 49 = true"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 多个字符从左往右依次比较"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:cB}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:ff}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 先比较 'a' 和 'b'，不等，则直接得出结果"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'a'.charCodeAt() \u003E 'b'.charCodeAt() -\u003E 97 \u003E 98 -\u003E false"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fg}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:cB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 先比较 'a' 和 'a'，两者相等，继续比较第二个字符 'c' 和 'b‘，得出结果"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 特殊情况：NaN 与任何数据相比都是 NaN，包括自己"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 特殊情况：如果数据类型是 undefined 和 null，得出固定的结果"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:ag,props:{id:fa},children:[{type:b,tag:z,props:{href:"#%E7%AC%AC%E4%B8%89%E5%9D%91%EF%BC%9A%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%9C%A8%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E6%97%B6%E4%BC%9A%E5%85%88%E8%BD%AC%E6%88%90-string%EF%BC%8C%E7%84%B6%E5%90%8E%E5%86%8D%E8%BD%AC%E6%88%90-number-%E8%BF%90%E7%AE%97",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:fb}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:cC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:dH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fi}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:cC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cD}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cD}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 如何完善 a，使其正确打印 1"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:cz}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"引用数据类型隐式转换顺序如下："}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"先使用 valueOf() 方法获取其原始值，如果原始值不是 number 类型，则使用 toString() 方法转成 string。"}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"再将 string 转成 number 运算。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"ps: Date 类型先调用 toString() 再调用 valueOf()。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"可以参考"},{type:b,tag:dJ,props:{to:fj},children:[{type:a,value:"《相等运算符(==)详解》"}]},{type:a,value:"中关于 ToPrimitive() 方法的解释。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"注意，空数组的 toString() 方法会得到空字符串，而空对象的 toString() 方法会得到字符串"},{type:b,tag:y,props:{},children:[{type:a,value:"[object Object]"}]},{type:a,value:" （注意第一个小写o，第二个大写O哟）"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 先将左边数组转成 string，然后右边也是 string，则转成 unicode 编码运算"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [1,2].valueOf() -\u003E [1,2]"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [1,2].toString() -\u003E '1,2'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F '1,2' == '1,2' -\u003E true"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:cC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:dH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F a.valueOf().toString() -\u003E \"[object Object]\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F \"[object Object]\" == \"[object Object]\" -\u003E true"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:fi}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 分析：逻辑与 && 运算一假则假，要想 if 分支语句小括号条件成立，则必需要让 a 的值同时等于 1 且等于 2 且等于 3."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 乍看之下，好像根本不可能实现，但是引用类型隐式转换时会先调用 valueOf() 方法，然后转成 number 运算。"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 而对象的 valueOf() 方法是可以重写的"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n    i"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 声明一个属性 i"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,bp,l]},children:[{type:a,value:"valueOf"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aF}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 每调用一次，让对象 a 的 i 属性自增一次并返回"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:cC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cD}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:cD}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 每一次运算时都会调用一次 a 的 valueOf() 方法"}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'1'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:ag,props:{id:cy},children:[{type:b,tag:z,props:{href:"#%E7%AC%AC%E5%9B%9B%E5%9D%91%EF%BC%9A%E9%80%BB%E8%BE%91%E9%9D%9E%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2%E6%90%9E%E6%B7%B7%E6%B7%86",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cy}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"前方高能，请注意~"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"常见面试题"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 小龙坑"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 大龙坑"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 陨石坑"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:dG}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:cz}]}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"关系运算符：将其他数据类型转成数字"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"逻辑非：将其他数据类型使用 Boolean() 转成布尔类型，转换结果参考 "},{type:b,tag:dJ,props:{to:"\u002Fblog\u002FJavaScript_%E4%B8%AD%E7%9A%84%E5%A5%87%E8%91%A9%E5%81%87%E5%80%BC"},children:[{type:a,value:"《JavaScript 中奇葩的假值》"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"引用类型数据存在堆中，栈中存储的事地址"}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:fk}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F Number('') == 0 -\u003E 0 == 0 -\u003E true"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 本质是 ![] 逻辑非表达式结果与 0 比较关系"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 逻辑非优先级高于关系运算符 ![] -\u003E false"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F Number(false) == 0 -\u003E 0 == 0 -\u003E true"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 本质是空数组 [] 与 ![] 逻辑非表达式结果鳔胶关系"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F ![] -\u003E false"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:fk}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F Number('') == Number(false) -\u003E 0 == 0 -\u003E true"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:fl}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 本质是空对象 {} 与 !{} 逻辑非表达式结果比较关系"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F ｛｝.valueOf().toString() -\u003E '[object Object]'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F !{} -\u003E false"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F Number('[object Object]') == Number(false) -\u003E NaN == 0 -\u003E false"}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:fl}]},{type:a,value:f}]}]}]}]},dir:bm,path:"\u002Farticles\u002F隐式类型转换",extension:a$,createdAt:"2021-05-11T08:17:53.897Z",updatedAt:"2021-05-11T14:26:25.403Z"},{slug:cE,description:"到底发生了什么？",title:cE,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1620608968572-eb721f7851f6?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw0NHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",alt:cE,tags:[aT],toc:[{id:fm,depth:_,text:fn},{id:fo,depth:_,text:fp},{id:fq,depth:_,text:fr},{id:fs,depth:_,text:ft},{id:cF,depth:_,text:cF},{id:cG,depth:af,text:cG},{id:cH,depth:af,text:cH},{id:cI,depth:_,text:cI}],body:{type:a_,children:[{type:b,tag:k,props:{},children:[{type:a,value:"有时候我们会对某些语法的行为非常困惑，比如相等(\"==\")运算符。由于JS是一种弱类型语言，在没有使用严格相等(\"===\")运算符的情况下，相等运算符两侧的变量内部会发生隐式的类型转换，正是这个隐式类型转换导致相等运算符经常让人摸不着头脑。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"刚好最近看到阮一峰老师ES6教程的规范文档这一部分，然后参考知乎一些大神的讲解，形成此文，同时也是让自己梳理一下，可能有不对的地方，还望指正。"}]},{type:a,value:f},{type:b,tag:$,props:{id:fm},children:[{type:b,tag:z,props:{href:"#%E4%B8%80%E3%80%81%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3%E4%B8%AD%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E8%A7%A3%E9%87%8A",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:fn}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"遇到实在是理解不了的问题，看规范文档最直接，"},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F",rel:[aj,bd,be],target:bf},children:[{type:a,value:"《ECMAScript 2015规范文档》"}]},{type:a,value:"中讲解相等运算符的在"},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-abstract-equality-comparison",rel:[aj,bd,be],target:bf},children:[{type:a,value:"7.2.12章节"}]},{type:a,value:"，这里直接贴出其算法的原文："}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Abstract Equality Comparison"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"The comparison x == y, where x and y are values, produces true or false. Such a comparison is performed as follows:"}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"ReturnIfAbrupt(x)."}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"ReturnIfAbrupt(y)."}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"If Type(x) is the same as Type(y), then\n"},{type:b,tag:bP,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"return the result of performing Strict Equality Comparison x === y."}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fu},{type:b,tag:J,props:{},children:[{type:a,value:am}]},{type:a,value:fv},{type:b,tag:J,props:{},children:[{type:a,value:aI}]},{type:a,value:fw}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fu},{type:b,tag:J,props:{},children:[{type:a,value:aI}]},{type:a,value:fv},{type:b,tag:J,props:{},children:[{type:a,value:am}]},{type:a,value:fw}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"If Type(x) is Number and Type(y) is String, return the result of the comparison x == ToNumber(y)."}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"If Type(x) is String and Type(y) is Number, return the result of the comparison ToNumber(x) == y."}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"If Type(x) is Boolean, return the result of the comparison ToNumber(x) == y."}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"If Type(y) is Boolean, return the result of the comparison x == ToNumber(y)."}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"If Type(x) is either String, Number, or Symbol and Type(y) is Object, then return the result of the comparison x == ToPrimitive(y)."}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"If Type(x) is Object and Type(y) is either String, Number, or Symbol, then return the result of the comparison ToPrimitive(x) == y."}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"Return false."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"算法流程翻译过来就是下面的："}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 非正常值(比如x本身会抛出错误)，则中断执行"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 y 非正常值(同上)，则中断执行"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 的数据类型和 y 的数据类型相同，则返回以严格运算符执行判断的结果，即 x === y 的结果"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 是 null，y 是 undefined，返回 true"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 是 undefined，y 是 null，返回 true"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 的数据类型是 Number，y 的数据类型是 String，则将 y 转成 Number，然后返回 x == toNumber(y) 的结果"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 的数据类型是 String，y 的数据类型是 Number，则将 x 转成 Number，然后返回 toNumber(x) == y 的结果"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 的数据类型是 Boolean，则将 x 转成 Number，然后返回 toNumber(x) == y 的结果"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 y 的数据类型是 Boolean，则将 y 转成 Number，然后返回 x == toNumber(y) 的结果"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 的数据类型是 String、Number 或者 Symbol，y 的数据类型是Object，则将 y 转成原始类型，然后返回 x==toPrimitive(y) 的结果"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 x 的数据类型是 Object，y 的数据类型是 String、Number 或者 Symbol，则将 x 转成原始类型，然后返回 toPrimitive(x) == y 的结果"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"返回 false"}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:$,props:{id:fo},children:[{type:b,tag:z,props:{href:"#%E4%BA%8C%E3%80%81%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3%E4%B8%ADtonumber%E6%96%B9%E6%B3%95%E7%9A%84%E8%A7%A3%E9%87%8A",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:fp}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"上面提到的toNumber又是个啥呢，是不是又云里雾里的？没关系，规范文档里面写了的！！"},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-tonumber",rel:[aj,bd,be],target:bf},children:[{type:a,value:"我们接着看"}]},{type:a,value:cs}]},{type:a,value:cJ},{type:b,tag:cK,props:{},children:[{type:b,tag:cL,props:{},children:[{type:b,tag:Z,props:{},children:[{type:b,tag:bg,props:{},children:[{type:a,value:fx}]},{type:b,tag:bg,props:{},children:[{type:a,value:dK}]}]}]},{type:b,tag:cM,props:{},children:[{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:dL}]},{type:b,tag:K,props:{},children:[{type:a,value:"If argument is an abrupt completion, return argument. Otherwise return ToNumber(argument.[[value]])."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cN}]},{type:b,tag:K,props:{},children:[{type:a,value:"Return NaN."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cO}]},{type:b,tag:K,props:{},children:[{type:a,value:"Return +0."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cP}]},{type:b,tag:K,props:{},children:[{type:a,value:"Return 1 if argument is true. Return +0 if argument is false."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:bH}]},{type:b,tag:K,props:{},children:[{type:a,value:"Return argument (no conversion)."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:bI}]},{type:b,tag:K,props:{},children:[{type:a,value:"See grammar and conversion algorithm below."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cQ}]},{type:b,tag:K,props:{},children:[{type:a,value:"Throw a TypeError exception."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:ak}]},{type:b,tag:K,props:{},children:[{type:a,value:"Apply the following steps:"},{type:b,tag:cR,props:{},children:[]},{type:a,value:"    1. Let primValue be ToPrimitive(argument, hint Number)."},{type:b,tag:cR,props:{},children:[]},{type:a,value:"    2. Return ToNumber(primValue)."}]}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"来来来，翻译走一波~"}]},{type:a,value:cJ},{type:b,tag:cK,props:{},children:[{type:b,tag:cL,props:{},children:[{type:b,tag:Z,props:{},children:[{type:b,tag:bg,props:{},children:[{type:a,value:"参数类型"}]},{type:b,tag:bg,props:{},children:[{type:a,value:"结果"}]}]}]},{type:b,tag:cM,props:{},children:[{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:"完成标志( 例如return、break、throw等)"}]},{type:b,tag:K,props:{},children:[{type:a,value:"如果参数是一个异常中断，就返回这个参数，否则就返回该参数转换成Number之后的数值"}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cN}]},{type:b,tag:K,props:{},children:[{type:a,value:"返回 NaN"}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cO}]},{type:b,tag:K,props:{},children:[{type:a,value:"返回 +0"}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cP}]},{type:b,tag:K,props:{},children:[{type:a,value:"如果参数是 true，返回 1；如果参数是 false，返回 +0"}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:bH}]},{type:b,tag:K,props:{},children:[{type:a,value:"返回参数(不做转换)"}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:bI}]},{type:b,tag:K,props:{},children:[{type:a,value:"看本文第三节"}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cQ}]},{type:b,tag:K,props:{},children:[{type:a,value:"抛出一个TypeError异常"}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:ak}]},{type:b,tag:K,props:{},children:[{type:a,value:"采用下述的步骤："},{type:b,tag:cR,props:{},children:[]},{type:a,value:"    1. 利用ToPrimitive(argument,hint Number)的方式转成原始类型"},{type:b,tag:cR,props:{},children:[]},{type:a,value:"    2. 将上述步骤的原始类型转成数值，即ToNumber(primValue)，并返回该数值"}]}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"等等好像又冒出来了个ToPrimitive，What？？？别急别急，一步一来，我们第四节来介绍它，先介绍String转Number。"}]},{type:a,value:f},{type:b,tag:$,props:{id:fq},children:[{type:b,tag:z,props:{href:"#%E4%B8%89%E3%80%81%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3%E4%B8%ADstring%E8%BD%ACnumber%E6%96%B9%E6%B3%95%E7%9A%84%E8%A7%A3%E9%87%8A",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:fr}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"还是按照惯例，规范文档的"},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-tonumber-applied-to-the-string-type",rel:[aj,bd,be],target:bf},children:[{type:a,value:fy}]},{type:a,value:"送上。规范文档里面东西有点多，就不复制了，这里简要的介绍一下。"}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果字符串中只包含数字（包括前面带加号或负号的情况），则将其转换为十进制数值，即 \"1\" 会变成 1，\"123\" 会变成 123，而 \"011\" 会变成 11（注意：前导的零被忽略了）；"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果字符串中包含有效的浮点格式，如 \"1.1\"，则将其转换为对应的浮点数值（同样，也会忽略前导零）；"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果字符串中包含有效的十六进制格式，例如 \"0xf\"，则将其转换为相同大小的十进制整数值；"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果字符串是空的（不包含任何字符），则将其转换为 0；"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果字符串中包含除上述格式之外的字符，则将其转换为 NaN。"}]},{type:a,value:f}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:$,props:{id:fs},children:[{type:b,tag:z,props:{href:"#%E5%9B%9B%E3%80%81%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3%E4%B8%ADtoprimitive%E6%96%B9%E6%B3%95%E7%9A%84%E8%A7%A3%E9%87%8A",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ft}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"原文"},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-toprimitive",rel:[aj,bd,be],target:bf},children:[{type:a,value:fy}]},{type:a,value:cs}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"ToPrimitive(input[, PreferredType])"}]}]},{type:a,value:cJ},{type:b,tag:cK,props:{},children:[{type:b,tag:cL,props:{},children:[{type:b,tag:Z,props:{},children:[{type:b,tag:bg,props:{},children:[{type:a,value:"Input Type"}]},{type:b,tag:bg,props:{},children:[{type:a,value:dK}]}]}]},{type:b,tag:cM,props:{},children:[{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:dL}]},{type:b,tag:K,props:{},children:[{type:a,value:"If input is an abrupt completion, return input. Otherwise return ToPrimitive(input.[[value]]) also passing the optional hint PreferredType."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cN}]},{type:b,tag:K,props:{},children:[{type:a,value:bD}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cO}]},{type:b,tag:K,props:{},children:[{type:a,value:bD}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cP}]},{type:b,tag:K,props:{},children:[{type:a,value:bD}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:bH}]},{type:b,tag:K,props:{},children:[{type:a,value:bD}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:bI}]},{type:b,tag:K,props:{},children:[{type:a,value:bD}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cQ}]},{type:b,tag:K,props:{},children:[{type:a,value:bD}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:ak}]},{type:b,tag:K,props:{},children:[{type:a,value:"Perform the steps following this table."}]}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这个表格的东西不多，就不翻译了，说说Object的情况下的转换步骤。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"原文是下面是这样的："}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"When "},{type:b,tag:z,props:{href:bQ,rel:[aj],dataToken:bR},children:[{type:a,value:bS}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:fz}]},{type:a,value:") is Object, the following steps are taken:"}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:b,tag:A,props:{},children:[{type:a,value:br},{type:b,tag:U,props:{},children:[{type:a,value:dM}]},{type:a,value:" was not passed, let "},{type:b,tag:U,props:{},children:[{type:a,value:bh}]},{type:a,value:bi},{type:b,tag:y,props:{},children:[{type:a,value:fA}]},{type:a,value:n}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:"Else if "},{type:b,tag:U,props:{},children:[{type:a,value:dM}]},{type:a,value:" is hint String, let "},{type:b,tag:U,props:{},children:[{type:a,value:bh}]},{type:a,value:bi},{type:b,tag:y,props:{},children:[{type:a,value:dN}]},{type:a,value:n}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:"Else "},{type:b,tag:U,props:{},children:[{type:a,value:dM}]},{type:a,value:" is hint Number, let "},{type:b,tag:U,props:{},children:[{type:a,value:bh}]},{type:a,value:bi},{type:b,tag:y,props:{},children:[{type:a,value:dO}]},{type:a,value:n}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:bE},{type:b,tag:U,props:{},children:[{type:a,value:cS}]},{type:a,value:bi},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-getmethod",rel:[aj],dataToken:"b83620925a084f8e94740cd574a59d8b"},children:[{type:a,value:"GetMethod"}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:fz}]},{type:a,value:", @@toPrimitive)."}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:b,tag:z,props:{href:cT,rel:[aj],dataToken:cU},children:[{type:a,value:cV}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:cS}]},{type:a,value:bs}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:br},{type:b,tag:U,props:{},children:[{type:a,value:cS}]},{type:a,value:" is not "},{type:b,tag:c,props:{style:cW},children:[{type:a,value:aI}]},{type:a,value:fB},{type:b,tag:aq,props:{},children:[{type:b,tag:A,props:{},children:[{type:a,value:bE},{type:b,tag:U,props:{},children:[{type:a,value:bj}]},{type:a,value:bi},{type:b,tag:z,props:{href:fC,rel:[aj],dataToken:fD},children:[{type:a,value:fE}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:cS}]},{type:a,value:bT},{type:b,tag:U,props:{},children:[{type:a,value:"input,"}]},{type:a,value:" «"},{type:b,tag:U,props:{},children:[{type:a,value:bh}]},{type:a,value:"»)."}]},{type:a,value:bF},{type:b,tag:A,props:{},children:[{type:b,tag:z,props:{href:cT,rel:[aj],dataToken:cU},children:[{type:a,value:cV}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:bj}]},{type:a,value:bs}]},{type:a,value:bF},{type:b,tag:A,props:{},children:[{type:a,value:br},{type:b,tag:z,props:{href:bQ,rel:[aj],dataToken:bR},children:[{type:a,value:bS}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:bj}]},{type:a,value:fF},{type:b,tag:U,props:{},children:[{type:a,value:bj}]},{type:a,value:n}]},{type:a,value:bF},{type:b,tag:A,props:{},children:[{type:a,value:fG},{type:b,tag:c,props:{style:cW},children:[{type:a,value:fH}]},{type:a,value:fI}]},{type:a,value:aB}]}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:br},{type:b,tag:U,props:{},children:[{type:a,value:bh}]},{type:a,value:fJ},{type:b,tag:y,props:{},children:[{type:a,value:fA}]},{type:a,value:", let "},{type:b,tag:U,props:{},children:[{type:a,value:bh}]},{type:a,value:bi},{type:b,tag:y,props:{},children:[{type:a,value:dO}]},{type:a,value:n}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:"Return OrdinaryToPrimitive("},{type:b,tag:U,props:{},children:[{type:a,value:"input,hint"}]},{type:a,value:bs}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"When the abstract operation OrdinaryToPrimitive is called with arguments O and hint, the following steps are taken:"}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:b,tag:A,props:{},children:[{type:b,tag:z,props:{href:fK,rel:[aj],dataToken:fL},children:[{type:a,value:fM}]},{type:a,value:fN},{type:b,tag:z,props:{href:bQ,rel:[aj],dataToken:bR},children:[{type:a,value:bS}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:dP}]},{type:a,value:") is Object"}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:b,tag:z,props:{href:fK,rel:[aj],dataToken:fL},children:[{type:a,value:fM}]},{type:a,value:fN},{type:b,tag:z,props:{href:bQ,rel:[aj],dataToken:bR},children:[{type:a,value:bS}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:bh}]},{type:a,value:") is String and its value is either "},{type:b,tag:y,props:{},children:[{type:a,value:dN}]},{type:a,value:" or "},{type:b,tag:y,props:{},children:[{type:a,value:dO}]},{type:a,value:n}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:br},{type:b,tag:U,props:{},children:[{type:a,value:bh}]},{type:a,value:fJ},{type:b,tag:y,props:{},children:[{type:a,value:dN}]},{type:a,value:fB},{type:b,tag:aq,props:{},children:[{type:b,tag:A,props:{},children:[{type:a,value:bE},{type:b,tag:U,props:{},children:[{type:a,value:dQ}]},{type:a,value:fO},{type:b,tag:y,props:{},children:[{type:a,value:fP}]},{type:a,value:bT},{type:b,tag:y,props:{},children:[{type:a,value:fQ}]},{type:a,value:fR}]},{type:a,value:aB}]}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:"Else,\n\t"},{type:b,tag:aq,props:{},children:[{type:b,tag:A,props:{},children:[{type:a,value:bE},{type:b,tag:U,props:{},children:[{type:a,value:dQ}]},{type:a,value:fO},{type:b,tag:y,props:{},children:[{type:a,value:fQ}]},{type:a,value:bT},{type:b,tag:y,props:{},children:[{type:a,value:fP}]},{type:a,value:fR}]},{type:a,value:aB}]}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:"For each "},{type:b,tag:U,props:{},children:[{type:a,value:aG}]},{type:a,value:fS},{type:b,tag:U,props:{},children:[{type:a,value:dQ}]},{type:a,value:fS},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-list-and-record-specification-type",rel:[aj],dataToken:"90658c313c2245d8b77dc5b219fdfbc1"},children:[{type:a,value:"List"}]},{type:a,value:" order, do\n\t"},{type:b,tag:aq,props:{},children:[{type:b,tag:A,props:{},children:[{type:a,value:bE},{type:b,tag:U,props:{},children:[{type:a,value:u}]},{type:a,value:bi},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-get-o-p",rel:[aj],dataToken:"49855746eab7068f760ba357a4f221cf"},children:[{type:a,value:"Get"}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:dP}]},{type:a,value:bT},{type:b,tag:U,props:{},children:[{type:a,value:aG}]},{type:a,value:bs}]},{type:a,value:bF},{type:b,tag:A,props:{},children:[{type:b,tag:z,props:{href:cT,rel:[aj],dataToken:cU},children:[{type:a,value:cV}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:u}]},{type:a,value:bs}]},{type:a,value:bF},{type:b,tag:A,props:{},children:[{type:a,value:br},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-iscallable",rel:[aj],dataToken:"fa718e4eaa9769401e86ab0db3c11881"},children:[{type:a,value:"IsCallable"}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:u}]},{type:a,value:") is "},{type:b,tag:c,props:{style:cW},children:[{type:a,value:C}]},{type:a,value:", then\n\t\t"},{type:b,tag:aq,props:{},children:[{type:b,tag:A,props:{},children:[{type:a,value:bE},{type:b,tag:U,props:{},children:[{type:a,value:bj}]},{type:a,value:bi},{type:b,tag:z,props:{href:fC,rel:[aj],dataToken:fD},children:[{type:a,value:fE}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:u}]},{type:a,value:bT},{type:b,tag:U,props:{},children:[{type:a,value:dP}]},{type:a,value:bs}]},{type:a,value:fT},{type:b,tag:A,props:{},children:[{type:b,tag:z,props:{href:cT,rel:[aj],dataToken:cU},children:[{type:a,value:cV}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:bj}]},{type:a,value:bs}]},{type:a,value:fT},{type:b,tag:A,props:{},children:[{type:a,value:br},{type:b,tag:z,props:{href:bQ,rel:[aj],dataToken:bR},children:[{type:a,value:bS}]},{type:a,value:i},{type:b,tag:U,props:{},children:[{type:a,value:bj}]},{type:a,value:fF},{type:b,tag:U,props:{},children:[{type:a,value:bj}]},{type:a,value:n}]},{type:a,value:bF}]}]},{type:a,value:aB}]}]},{type:a,value:aB},{type:b,tag:A,props:{},children:[{type:a,value:fG},{type:b,tag:c,props:{style:cW},children:[{type:a,value:fH}]},{type:a,value:fI}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:k,props:{style:"text-indent:0;"},children:[{type:a,value:"NOTEWhen ToPrimitive is called with no hint, then it generally behaves as if the hint were Number. However, objects may over-ride this behaviour by defining a @@toPrimitive method. Of the objects defined in this specification only Date objects ("},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-date.prototype-@@toprimitive",rel:[aj],dataToken:"096ed08160a887fee8c26e9f101c2ac6"},children:[{type:a,value:"see 20.3.4.45"}]},{type:a,value:") and Symbol objects ("},{type:b,tag:z,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-symbol.prototype-@@toprimitive",rel:[aj],dataToken:"e7ee250a1b2c31b29f7ddfcd4dc1968a"},children:[{type:a,value:"see 19.4.3.4"}]},{type:a,value:") over-ride the default ToPrimitive behaviour. Date objects treat no hint as if the hint were String."}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"东西有点多，简而概之。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"JS引擎内部转换为原始值 ToPrimitive(obj,preferredType) 函数接受两个参数，第一个 obj 为被转换的对象，第二个 preferredType 为希望转换成的类型（默认为空，接受的值为 Number 或 String）。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在执行 ToPrimitive(obj,preferredType) 时如果第二个参数为空并且 obj 为 Date 的实例时，此时 preferredType 会被设置为 String，其他情况下 preferredType 都会被设置为 Number。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 preferredType 为 Number，ToPrimitive 执行过程如下："}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fU}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fV}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fW}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fX}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果 preferredType 为 String，将上面的第 2 步和第 3 步调换，即："}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fU}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fW}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fV}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:fX}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:$,props:{id:cF},children:[{type:b,tag:z,props:{href:"#%E4%BA%94%E3%80%81%E4%B8%BE%E4%B8%AA%E4%BE%8B%E5%AD%90",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cF}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"看上面的东西难免有点乏味，还是举几个例子会更形象。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:cG},children:[{type:b,tag:z,props:{href:"#%E4%BE%8B%E5%AD%90%E4%B8%80",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cG}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"'true' == true"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"先不给出答案，我们一步一步看。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在这个相等运算中，左侧'true'的数据类型是String，右侧true的数据类型是Boolean。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"首先满足第9条，所以布尔值true转成数值1，返回'true'==1的值；"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"其次'true'==1又满足第7条，所以字符串true根据上面讲的规则，转换成Nan，故返回NaN==1；"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"然后NaN都不等于任何值，包括它本身，即 NaN == NaN 返回 false；"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"所以最后 'true' == true 返回 false。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:cH},children:[{type:b,tag:z,props:{href:"#%E4%BE%8B%E5%AD%90%E4%BA%8C",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cH}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"0 == null"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在这个相等运算中，左侧 0 的数据类型是 Number，右侧 null 的数据类型是 Null（规范文档 4.3.13 节规定，内部 Type 运算的结果，与 typeof 运算符无关），所以根据上面的规则，前面 11 条都不满足，直到第 12 步才返回 false。"}]},{type:a,value:f},{type:b,tag:$,props:{id:cI},children:[{type:b,tag:z,props:{href:"#%E5%85%AD%E3%80%81%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cI}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:z,props:{href:fY,rel:[aj,bd,be],target:bf},children:[{type:a,value:fY}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:z,props:{href:fZ,rel:[aj,bd,be],target:bf},children:[{type:a,value:fZ}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:z,props:{href:f_,rel:[aj,bd,be],target:bf},children:[{type:a,value:f_}]}]}]},dir:bm,path:"\u002Farticles\u002F相等运算符(==)详解",extension:a$,createdAt:"2021-05-11T08:23:02.962Z",updatedAt:"2021-05-11T14:26:04.174Z"},{slug:"原型",description:"JavaScript 中的原型属性和原型链",title:f$,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1492551557933-34265f7af79e?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvdG90eXBlfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",alt:f$,tags:[aT],toc:[{id:cX,depth:_,text:cX},{id:cY,depth:_,text:cY},{id:cZ,depth:_,text:cZ},{id:ga,depth:_,text:gb},{id:gc,depth:_,text:gd},{id:c_,depth:_,text:c_},{id:c$,depth:af,text:c$},{id:da,depth:af,text:da},{id:db,depth:_,text:db},{id:dc,depth:af,text:dc},{id:dd,depth:af,text:dd},{id:de,depth:af,text:de},{id:df,depth:af,text:df},{id:dg,depth:af,text:dg},{id:dh,depth:af,text:dh},{id:di,depth:_,text:di},{id:dj,depth:af,text:dj},{id:dk,depth:af,text:dk},{id:dl,depth:af,text:dl}],body:{type:a_,children:[{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"每一个 JS 对象（null 除外）都和另一个对象相关联，这“另一个对象”就是原型，每一个对象都从原型继承属性。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"比如，通过对象直接量创建的对象，它的原型是 Object.prototype："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [[prototype]] -\u003E Object.prototype"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"使用两对 [] 括起来的 prototype 属性表示对象的内部私有属性，这是 ES 规范中的表示法。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"通过 new 创建的对象，它的原型是构造函数的 prototype 属性："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:dR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [[prototype]] -\u003E Array.ptototype"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"注意，这个原型有点特殊，它是一个数组。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"通过 Object.create() 创建的对象，它的原型是第一个参数："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:dS},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:ge},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [[prototype]] -\u003E p:{x:1, y:2}"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"注意，第一个参数如果是 null，那么创建的对象就没有原型属性了。"}]},{type:a,value:f},{type:b,tag:$,props:{id:cX},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E5%B1%9E%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cX}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"可以使用 Object.getPrototypeOf() 方法获取某个对象的原型"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:dR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:dR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:dS},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:ge},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"q"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:" p"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这里需要注意的是，一般来说，我们看到对象的原型属性，既然是属性，就自然而然的认为可以通过属性运算符 . 或者是 [] 来访问属性，但原型属性是无法这么直接访问到的，直接访问到结果是 undefined。"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:et}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:dT}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"有一些浏览器，像 Firefox、Chrome 等会通过 "},{type:b,tag:J,props:{},children:[{type:a,value:dT}]},{type:a,value:" 这个属性访问到对象的原型："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:dT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F Object.prototype"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这个属性由于浏览器的广泛支持，被写到了 ES 的附录中，这意味着：只有浏览器环境才要支持这个属性，其他实现环境并不需要。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"但我们并不推荐使用这个属性，从两个下划线开头的命名法，我们知道，这意味着它是一个私有属性，在调试代码的时候，"},{type:b,tag:J,props:{},children:[{type:a,value:dm}]},{type:a,value:" 属性比较有用，可以看到更多的信息。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:dm}]},{type:a,value:" 这个属性也是可写的，这意味着给对象添加 "},{type:b,tag:J,props:{},children:[{type:a,value:dm}]},{type:a,value:" 属性相当于在给对象添加原型。比如下面这段代码："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  __proto__"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:"a\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:dU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"需要注意，如果设置了两个 "},{type:b,tag:J,props:{},children:[{type:a,value:dm}]},{type:a,value:" 属性，会报语法错误，这和普通属性还是有点区别的。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"双下滑线的变量直接出现在代码中，看上去就不够美观。而且一般来说，直接操作私有属性，开发人员都会有一定的抵触情绪。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"ES6 也有推荐的正式方法，它是 setPrototypeOf() 方法。"}]},{type:a,value:f},{type:b,tag:$,props:{id:cY},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E8%AE%BE%E7%BD%AE%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E5%B1%9E%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cY}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"Object.setPrototypeOf(obj, prototype)"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:dV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:dU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:dU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这个方法很直观，第一个参数是要设置原型的对象，第二个参数是该对象的新原型，他可以是普通对象，也可以是 null。如果第二个参数不是对象或者 null，则会报 TypeError 错误："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:dV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ca}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F TypeError: Object prototype may only be an Object or null: 123"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"通过这个方法来更改对象的原型，性能比较差，不推荐使用这个方法。如果能使用 Object.create() 方法，就用这个方法吧。"}]},{type:a,value:f},{type:b,tag:$,props:{id:cZ},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E4%B8%BA%E6%9F%90%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:cZ}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"someObj.isPrototypeOf(anotherObj)"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:gf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:gf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"a 是一个对象直接量，用 Object.create() 方法创建了一个对象 o，传入的参数是 a，所以 a 是 o 的原型，所以 a.isPrototypeOf(o) 的结果是 true。因为所有对象都是从 Object 对象继承而来的，所以 Object.prototype 也是 o 的原型。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这里强调一下，原型也是一个普通的对象，所以它也有 isPrototypeOf() 方法。"}]},{type:a,value:f},{type:b,tag:$,props:{id:ga},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%AF%B9%E8%B1%A1%E4%B8%AD%E7%9A%84-super-%E5%85%B3%E9%94%AE%E5%AD%97",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:gb}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"ES6 中新增了一个关键字 super，它可以在类中使用，也可以在对象中使用。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"对象中的 super 关键字指向该对象的原型。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:" obj1 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:dn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'method 1'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:" obj2 "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:dn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"super"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:dn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:dV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:gg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:" obj1"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:gg},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:dn}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'method 1'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"上面的代码，先声明了两个对象 obj1 和 obj2，然后通过 setPrototypeOf() 方法将 obj2 对象的原型设置为 obj1，在调用 obj2 对象的 method1() 方法时，它通过 super.method1() 调用了原型上，也就是 obj1 对象上的 method1() 方法。super 关键字不能单独使用，比如不能把它打印出来，会报语法错误。"}]},{type:a,value:f},{type:b,tag:$,props:{id:gc},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#objectcreateproto-propertiesobject",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:gd}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Object.create() 方法还有第二个参数，它并不是一个普通的对象直接量，而是一个 descriptor，也就是属性描述符。"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:dW}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:dW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,bp,l]},children:[{type:a,value:gh}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'A '"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"color"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:gi}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"desc"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ay}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'.'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:" car "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:dW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  color"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"writable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:gj},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:dX},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'red'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:"\n  rawDesc"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"writeable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:gj},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:dX},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'Porsche boxter'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:"\n  desc"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n    configurable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,bp,l]},children:[{type:a,value:"get"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:gk},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:ax}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:gl}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:"toUpperCase"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,bp,l]},children:[{type:a,value:gm}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bx]},children:[{type:a,value:bM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:gk},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:gl}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:dX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:eh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"car"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:gh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'A Red PORSCHE BOXTER.'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"color 和 rawEesc 是数据描述符（Data Descriptor），desc 是存取描述符（Accessor Desctiptor），它有 get() 和 set() 函数。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Object.create() 的第二个参数和 Object.defineProperties(obj, props) 的第二个参数一样。"}]},{type:a,value:f},{type:b,tag:$,props:{id:c_},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%8E%9F%E5%9E%8B%E9%93%BE",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:c_}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们已经知道，当声明了一个数组 a 时，它的原型指向了 Array.prototype。注意，不是指向 Array 构造函数，而是指向 Array 构造函数的原型。在 JS 中，一般来说对象都继承自 Object，Array 也不例外。当然有其他特殊情况，没有原型的对象也是存在的。比如使用 Object.create(null) 创建的对象就没有原型。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:bw,props:{alt:"原型_0",src:"\u002Fimg\u002F%E5%8E%9F%E5%9E%8B_0.png"},children:[]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"变量 a 是一个空数组，自己有一个 length 属性，它的原型属性指向 Array.prototype。Array.prototype 也是一个普通对象。和其它对象有点不同的是，它是一个数组。它的 constructor 属性是 Array 构造函数，它还有 length 属性和 concat 方法。它的原型属性指向了 Object.prototype，它也是一个对象，有 constructor 属性是 Object 构造函数，还有一些其它的方法，比如 hasOwnProperty、toString 等。它的原型是 null，就是没有原型了。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"大家有没有觉得这张图似曾相识，它和作用域链十分相似。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:bw,props:{alt:"变量作用域_0",src:eY},children:[]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这里是不同原型对象组成的链，所以它叫原型链。这种链的概念，在整个前端开发，甚至是整个编程领域中都很常见。如果大家学过面向对象，理解这个概念就很容易了，因为它和面向对象的继承非常类似。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:c$},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:c$}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bq}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:dD}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,es,bp,u,l,o]},children:[{type:a,value:bk}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:dY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:gn}]},{type:a,value:"\np2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:bk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:gn}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bk}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:" p2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bk}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aM}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bk}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们先定义了一个 Person 的构造函数，构造函数相当于其它语言中的类，所以约定俗成，构造函数的首字母也要大写。然后给 Person 的原型添加了三个属性，分别是 name、age、sayName，然后我们使用 new 关键字创建了两个实例 p1、p2，调用它们的 sayName 方法，返回的都是 ’john’。通过代码我们可以验证，两个实例的 sayName 是相同的，都是 Person 构造函数的原型属性 sayName。换句话说，原型对象的属性被所有实例共享。如果修改了原型对象的属性，那所有实例的属性都会改变。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"原型属性在设置原型时也可以同时设置，写法上更简单。"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,bp,l]},children:[{type:a,value:bk}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:ag,props:{id:da},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%A4%BA%E6%84%8F%E5%9B%BE",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:da}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:bw,props:{alt:"原型_1",src:"\u002Fimg\u002F%E5%8E%9F%E5%9E%8B_1.png"},children:[]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Person 构造函数有一个自身的普通属性 prototype，指向的是 Person.prototype。它还有一个原型属性，指向的是 Function.prototype，它是一个函数，上面挂载了一些静态方法，比如 call、apply 等。Person.prototype 的 constructor 是 Person 构造函数，Person.prototype 的原型指向的是 Object.prototype。Function.prototype 的原型指向的也是 Object.prototype。实例 p1 和 p2，它们的原型指向的是 Person.prototype。"}]},{type:a,value:f},{type:b,tag:$,props:{id:db},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%93%8D%E4%BD%9C%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:db}]},{type:a,value:f},{type:b,tag:ag,props:{id:dc},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%B1%9E%E6%80%A7%E7%9A%84%E7%89%B9%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:dc}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:bw,props:{alt:"原型_2",src:"\u002Fimg\u002F%E5%8E%9F%E5%9E%8B_2.png"},children:[]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们知道在 ES5 版本之前，对象的属性都是可配置、可枚举、可读写的。而在 ES5 中可以控制这些属性。比如把它设置成只读的、设置成不可枚举的等等，还可以设置 getter 和 setter 函数。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:dd},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%9F%A5%E8%AF%A2%E5%B1%9E%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:dd}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"查询属性会沿着对象的原型链一级一级网上查询，知道找到目标属性或者原型是 null 的对象为止。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"form"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:do_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:dD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,m,dp]},children:[{type:a,value:dq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"toString"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在查询 age 属性时，首先查 p1 自身有没有这个属性，结果是没有。然后就去它的原型，也就是 Person.prototype 上面查询，结果是找到了，所以它的值是 23；在查询 from 属性时，p1 自身就有这个属性，值是 'China'；在查询 toString 属性时，p1 自身和它的原型都没有这个属性，接着它会沿着原型链继续查询，也就是 Object.prototype 上查找，结果是找到了。如果沿着原型链，直到顶层对象上页没有找到，则返回 undefined。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:de},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:de}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"首先检测对象是否允许添加属性，如果允许，则在原始对象上创建属性或者更改已有的属性。添加属性操作不会修改原型链。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,m,dp]},children:[{type:a,value:dq}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:do_}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 只在 p1 上添加了 from 属性，不会修改 Person.prototype"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"上面的代码成功的给 p1 对象添加了 from 属性，但并不会修改它的原型 Person.prototype。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"只读属性"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:eP}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:go}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:gp}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  writable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:gq},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:do_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,m,dp]},children:[{type:a,value:dq}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'America'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,m,dp]},children:[{type:a,value:dq}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'China'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们使用 Object.defineProperty 方法，给 Person.prototype 添加了一个不可写的 from 属性，它的值是 'China'。在给实例 p1 添加 from 属性的时候，首先检测原型链上是否存在这个属性。注意，是整条原型链都会检测，不只是它的父类。比如吧 Person.prototype 换成 Object.prototype 效果是一样的。我们发现在 Person.prototype 上存在这个属性，并且它是不可写入的，所以给实例 p1 添加 from 属性无效，什么事情都不会发生。如果是严格模式，还会报错。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"属性在原型上已存在"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:dY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'Hunt'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'Hunt'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:gr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'John"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们给实例 p1 设置了一个 name，值是 'Hunt'，这个属性在它的原型 Person.prototype 上已经存在，它的值是 'John'。此时 p1 拥有了自己的 name 属性，它会遮挡原型上的 name。也就是说，此时打印 p1.name，它的值是 'Hunt'，它不会修改原型上的属性。我们打印另一个 p2.name，它的值还是 'John'。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"stter"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"ptototype"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  firstName"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:"\n  lastName"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'Smith'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:gm}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,bx]},children:[{type:a,value:bM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:" names "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:" values"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:"aplit"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:gi}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:gs}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:gt},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"lastName"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:gt},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bu}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'Nicholas Cage'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:gs}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'Nicholas"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"在给实例 p1 设置 fullName 属性时，在它的原型上，它是一个 setter，那么此时会调用这个 setter 方法，它的作用是分别设置 firstName 和 lastName，所以最终的输出是 'Nicholas'。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:df},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%88%A0%E9%99%A4%E5%B1%9E%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:df}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"delete 运算符只能删除对象的自身属性，不能删除从原型继承而来的属性。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"person"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bu}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'John Smith'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'John' 'John Smith'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:dv}]},{type:a,value:bX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:dv}]},{type:a,value:bX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bu}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'John' undefined"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"实例对象 p1 添加了自身属性 fullName，此时 name 和 fullName 分别是 'John' 和 'John Smith'，然后用 delete 运算符将这两个属性删除，再输出 name 和 fullName，分别是 'Jhon' undefined，"}]},{type:a,value:f},{type:b,tag:ag,props:{id:dg},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%A3%80%E6%B5%8B%E5%B1%9E%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:dg}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"有时候，我们只需要知道对象是否存在某个属性，此时可以使用属性检测的方法。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"可以用过 in、hasOwnProperty、propertyIsEnumerable 等方法来检测属性是否存在。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:dZ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bB}]},{type:a,value:cc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:d_}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bB}]},{type:a,value:cc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:gu}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bB}]},{type:a,value:cc},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们使用对象直接量的方法声明了一个对象 o，它有一个 x 属性，我们先使用 in 运算符加测属性是否存在，in 运算符左侧是属性名，右侧是对象。结果发现自身属性 x 和从 Object.prototype 继承而来的 toString 检测结果都是 true，而由于自身和原型链上都不存在 y 属性，所以结果为 false。所以，in 运算符会检测对象的自身属性或者从原型继承而来的属性，那有没有办法区分这两种情形呢，答案是肯定的。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"我们可以使用对象的 hasOwnProperty 方法："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:d$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:dZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:d$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:d_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:d$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'trString'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"x 和 y 的检测结果与 in 运算符一致，但检测 toString 属性时返回的是 false，因为它是继承属性。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:dr}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"它是 hasOwnProperty 的增强版，是自身属性并且是可枚举时才返回 true。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:dr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:dZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:dr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:d_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:dr}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:gu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"检测 x 属性时返回的是 true，因为它是对象的自身属性且是可枚举的。检测 y 属性时检测结果是 false。最后是检测 Object.prototype 对象，结果是 false，虽然它有 toString 方法，但它是不可枚举的，所以结果也是 false。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"一个不易察觉的坑"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"检测属性时，经常会遇到一个坑，不管是初学者，还是有多年经验的程序员，估计都踩到过这个坑。"}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:bb}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"直接使用 "},{type:b,tag:y,props:{},children:[{type:a,value:"if(o.x)"}]},{type:a,value:" 来判断属性是否存在，这段代码是没问题，但如果 x 的值是 0 或者 false 这些假值的时候，alert 就不会运行了。总不能说 x 的值是 0 的时候，o 就不存在 x 属性吧。然后有同学会这么写："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ah}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"!=="}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这也不够准确，因为 x 的值有可能正好是 undefined，所以此时还是要使用 hasOwnProperty 方法。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:dh},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%9E%9A%E4%B8%BE%E5%B1%9E%E6%80%A7",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:dh}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"可以使用 for\u002Fin、Object.keys、Object.getOwnPropertyNames 来枚举对象的属性。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:bt},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bu}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'Jhon Smith'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:go}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:gp}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:gq},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:do_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:"\n  enumerable"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:T}]},{type:a,value:dS},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:bB}]},{type:a,value:bX},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:k},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'fullName','name','age'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:"keys"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [\"fullName\"]"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,al,s]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:"getOwnPropertyNames"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F [\"fullName\",\"from\"]"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"实例 p1 从原型上继承了 name 和 age 属性，当然还从 Object.prototype 上继承了更多属性，它有一个自身的属性 fullName，还有一个自身的属性 from，但它是不可枚举的，for\u002Fin 的结果是 'fullName'、'name'、'age'，它可以枚举自身属性和从原型上继承来的属性，但都必须是可枚举的；Object.keys 方法只返回自身可枚举属性 fullName；而 getOwnPropertyNames 方法返回的是自身属性 fullName 和 from，可枚举和不可枚举的都算。"}]},{type:a,value:f},{type:b,tag:$,props:{id:di},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%AE%9E%E8%B7%B5%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%9E%8B",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:di}]},{type:a,value:f},{type:b,tag:ag,props:{id:dj},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E6%80%A7%E8%83%BD",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:dj}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"查询属性会遍历原型链，有一定的性能问题。要注意代码中的原型链的长度，并在必要时将其分解，以避免潜在的性能问题。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"性能问题在绝大多数的开发场景中，我们人类是感受不到的。实际开发中很少需要处理非常庞大的数据量。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:dk},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E5%85%B1%E4%BA%AB%E5%B8%A6%E6%9D%A5%E7%9A%84%E9%97%AE%E9%A2%98",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:dk}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"原型上的属性被所有实例共享，如果属性值是对象类型，则某个实例更改后会影响其他实例，这往往不是实际所期望的效果。"}]}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:l}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:b,tag:c,props:{className:[d,aS]},children:[{type:a,value:aa}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:as}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:P}]},{type:a,value:"\n  books"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ac}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:au}]},{type:a,value:dY},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aJ}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:gv}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:"push"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"'The Lord of the Rings'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:gr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:gv}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\u002F\u002F 'The Lord of the Rings'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如果原型属性的值是函数，或者是原始类型，那并不存在这个问题。这也是原型的强大之处，原型是把双刃剑，就看怎么使用它了。"}]},{type:a,value:f},{type:b,tag:ag,props:{id:dl},children:[{type:b,tag:z,props:{ariaHidden:C,href:"#%E4%B8%8D%E8%A6%81%E6%89%A9%E5%B1%95%E5%8E%9F%E5%9E%8B",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:dl}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"不要想着去扩展 Object.prototype 或其他内置类型，影响面太大，出错的可能性非常高。"}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"除非你是框架库的作者，对风险有充分的思考和相应的解决方法，不然不要去想这件事情就是对的。"}]}]},dir:bm,path:"\u002Farticles\u002F原型",extension:a$,createdAt:"2021-05-11T13:23:30.654Z",updatedAt:"2021-05-11T13:49:15.458Z"},{slug:"JavaScript_中的奇葩假值",description:"我真的是个假值！",title:ds,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1556195332-95503f664ced?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8bWFnaWN8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",alt:ds,tags:[aT],toc:[{id:gw,depth:_,text:ds},{id:dt,depth:_,text:dt}],body:{type:a_,children:[{type:b,tag:$,props:{id:gw},children:[{type:b,tag:z,props:{href:"#javascript-%E4%B8%AD%E5%A5%87%E8%91%A9%E7%9A%84%E5%81%87%E5%80%BC",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ds}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"通常在以下语句结构中需要判断真假："}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"if 分支语句"}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"while 循环语句"}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"for 循环中的第二个语句"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"如："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:bb}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:gx},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bO}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:"while"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:gx},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bO}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,m,X]},children:[{type:a,value:aE}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Y}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\u003C="}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:bO}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"JavaScript 中有 6 个值为“假”，这六个值是："}]},{type:a,value:f},{type:b,tag:aq,props:{},children:[{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:aI}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"0(+0、-0)"}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:"\"\"('')(空字符串)"}]},{type:a,value:f},{type:b,tag:A,props:{},children:[{type:a,value:aP}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"这里面 false 本身是布尔类型，其它 5 个则不是。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"除了这 6 个外，其它均为“真”，包括对象、数组、正则、函数等。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"**注意：‘0’、‘null'、'false'、{}、[] 也都是真值。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"当然，对于这一切，查看下规范是最踏实的，ES 中的 ToBoolean 阐述了所有情形：\n"},{type:b,tag:J,props:{},children:[{type:a,value:"ToBoolean Conversions"}]}]},{type:a,value:cJ},{type:b,tag:cK,props:{},children:[{type:b,tag:cL,props:{},children:[{type:b,tag:Z,props:{},children:[{type:b,tag:bg,props:{},children:[{type:a,value:fx}]},{type:b,tag:bg,props:{},children:[{type:a,value:dK}]}]}]},{type:b,tag:cM,props:{},children:[{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:dL}]},{type:b,tag:K,props:{},children:[{type:a,value:"if argument is an abrupt completion, return argument. Otherwise return ToBoolean(argument,[[value]])."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cN}]},{type:b,tag:K,props:{},children:[{type:a,value:bY},{type:b,tag:J,props:{},children:[{type:a,value:av}]},{type:a,value:n}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cO}]},{type:b,tag:K,props:{},children:[{type:a,value:bY},{type:b,tag:J,props:{},children:[{type:a,value:av}]},{type:a,value:n}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cP}]},{type:b,tag:K,props:{},children:[{type:a,value:"Return argument."}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:bH}]},{type:b,tag:K,props:{},children:[{type:a,value:bY},{type:b,tag:J,props:{},children:[{type:a,value:av}]},{type:a,value:" if argument is "},{type:b,tag:J,props:{},children:[{type:a,value:"+0"}]},{type:a,value:", "},{type:b,tag:J,props:{},children:[{type:a,value:"-0"}]},{type:a,value:", or "},{type:b,tag:J,props:{},children:[{type:a,value:aP}]},{type:a,value:"; otherwise return "},{type:b,tag:J,props:{},children:[{type:a,value:C}]},{type:a,value:n}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:bI}]},{type:b,tag:K,props:{},children:[{type:a,value:bY},{type:b,tag:J,props:{},children:[{type:a,value:av}]},{type:a,value:" if argument is the empty String(its length is zero); otherwise return "},{type:b,tag:J,props:{},children:[{type:a,value:C}]}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:cQ}]},{type:b,tag:K,props:{},children:[{type:a,value:bY},{type:b,tag:J,props:{},children:[{type:a,value:C}]}]}]},{type:b,tag:Z,props:{},children:[{type:b,tag:K,props:{},children:[{type:a,value:ak}]},{type:b,tag:K,props:{},children:[{type:a,value:"Return"},{type:b,tag:J,props:{},children:[{type:a,value:C}]}]}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"直接了当可以看到，undefined、null 直接返回 false；Symbol、Object 永远返回 true，本身就是 Boolean 型直接返回原本值；Number 型的除 +0、-0 和 NaN 返回 false 以外，其余都返回 true；String 型中空字符串（即长度为 0）返回 false，其他情况返回 true。"}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"总结一下自身进行判断(toBoolean),假值的有 6 种情况：false、null、undefined、\"\"('')(空字符串)、0(+0、-0)、NaN。"}]}]},{type:a,value:f},{type:b,tag:$,props:{id:dt},children:[{type:b,tag:z,props:{href:"#%E6%89%A9%E5%B1%95",ariaHidden:C,tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:dt}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"虽然上面讨论的六个值都为“假”，它们之间并非都相等(非严格相等)："}]},{type:a,value:f},{type:b,tag:E,props:{className:[F]},children:[{type:b,tag:G,props:{className:[I,H]},children:[{type:b,tag:y,props:{},children:[{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"      "},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:gy},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bG}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:gz},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:av}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:gA},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:ea},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:gy},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bG}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:gz},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,am,ar]},children:[{type:a,value:am}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:gA},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:ea},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"   "},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:gB},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m,ar]},children:[{type:a,value:aI}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:ea},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bG}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:gB},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:ao}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p,s]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,u,l,o]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:ai}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:V}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:aP}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:at}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"对于相等运算符(==)，可以参考"},{type:b,tag:dJ,props:{to:fj},children:[{type:a,value:cE}]}]}]},dir:bm,path:"\u002Farticles\u002FJavaScript_中的奇葩假值",extension:a$,createdAt:"2021-05-11T13:34:34.418Z",updatedAt:"2021-05-11T14:26:30.092Z"}],tag:{slug:aT,description:"JavaScript 是一种遵守 ECMAScript 规范的编程语言。",name:aT,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1620607845876-214068622f8c?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw4fHx8ZW58MHx8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60",toc:[],body:{type:a_,children:[]},dir:"\u002Ftags",path:"\u002Ftags\u002Fjavascript",extension:a$,createdAt:"2021-05-11T03:15:41.954Z",updatedAt:"2021-05-11T07:44:14.068Z"}}],fetch:[],mutations:void 0}}("text","element","span","token","punctuation","\n"," ","operator","(",")","p","function","keyword",".","property-access","console","comment",";","class-name","number","method","=","{","}","code","a","li","log","true","string","div","nuxt-content-highlight","pre","line-numbers","language-js","strong","td",-1,"icon","icon-link",":",",","\n  ","1","\n    ","let","em","==","alert","control-flow","var","tr",2,"h2","Person","[","]","boolean","\n\n",3,"h3","x","0","nofollow","Object","known-class-name","null"," i ","\u002F\u002F true","2","ol","nil","prototype","\u002F\u002F false","const","false","o","return","+"," a ","3","\n\t"," o ","++","for","i","name"," x ","undefined","new","\n        ","p1","===","foo"," i","NaN","\u003C"," y","maybe-class-name","javascript","10","setTimeout","this","23"," p1 ","\np1","root",".md","f","if","\u003E","noopener","noreferrer","_blank","th","hint"," be ","result","sayName","\n  name","\u002Farticles","bar","variable","function-variable","'john'","If ",").","\n  age","fullName","相等比较","img","parameter","obj","arrow","=\u003E","in","!","Return input.","Let ","\n\t\t","''","Number","String","比如下面这段代码："," obj ","with","value","int","\u002F\u002F do something","ul","http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-ecmascript-data-types-and-values","461d087bacb36655ca6f94bd9b9c16f6","Type",", ","create","getPrototypeOf","'John'"," p1","Return ","原始类型","对象类型","另一个名字","123","y"," o","阻止变量被垃圾回收","闭包应用示例","\n            ","getName","作用域简介（scope）","作用域分类","禁止重复声明","循环语句中的块级绑定","循环语句中的函数","循环语句中的常量声明","全局块级绑定","最佳实践","作用域链延长","try-catch","g","。","JSON","隐式转换介绍","隐式转换规则","面试大坑总汇","第一坑：字符串连接符与算术运算符隐式转换规则混淆","第四坑：逻辑非隐式转换与关系运算符隐式转换搞混淆","原理分析","\"2\"","\"abc\"","a ","&&","相等运算符(==)详解","五、举个例子","例子一","例子二","六、参考链接","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","table","thead","tbody","Undefined","Null","Boolean","Symbol","br","exoticToPrim","http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-returnifabrupt","3090b820a5755eb2fae5add52c2b9823","ReturnIfAbrupt","color:#555555;","获取对象的原型属性","设置对象的原型属性","检测是否为某个对象的原型","原型链","自定义构造函数","原型链示意图","操作对象属性","属性的特性","查询属性","添加属性","删除属性","检测属性","枚举属性","实践中的原型","性能","共享带来的问题","不要扩展原型","proto","method1","'China'","module","from","propertyIsEnumerable","JavaScript 中奇葩的假值","扩展","原始类型和对象类型","delete","闭包","dom","变量作用域"," x","20","$x"," y ","age"," z","隐式类型转换","答案：","\"[object Object]\"","\u002F\u002F + 是算术运算符","nuxt-link","Result","Completion Record","PreferredType","\"string\"","\"number\"","O","methodNames","Array"," p ","__proto__"," a","setPrototypeOf","Car"," value"," p2 ","'x'","'y'","hasOwnProperty","\n \n","javascript-的数据类型","JavaScript 的数据类型","相等比较-1","","'abc'","\na","toLowerCase","\no"," o1 "," o2 ","o1 "," o2","\u002F\u002F 2","闭包--立即执行函数的应用：封装（信息隐藏）","闭包 + 立即执行函数的应用：封装（信息隐藏）","a\n    ","j","method-variable","\u002F\u002F undefined","作用域示例（c）：静态作用域","作用域示例（C）：静态作用域","作用域示例（perl）：动态作用域","作用域示例（Perl）：动态作用域","作用域示例（javascript）：静态作用域","作用域示例（JavaScript）：静态作用域","块级作用域（block-scope）","块级作用域（block scope）","const-声明","const 声明","暂时性死区（temporal-dead-zone-tdz）","暂时性死区（temporal dead zone, TDZ）","作用域链（scope-chain）","作用域链（scope chain）","printf","\"\\n\"","sub"," f"," g","该函数的地方查找。","\u002F\u002F Uncaught TypeError: Assignment to constant variable.","\u002F\u002F 'use strict'","\u002F\u002F ********* 暂时性死区 **********"," k "," obj","k","'json'","window","5","f_1","\u002Fimg\u002F%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F_0.png","e","第二坑：关系运算符会把其他数据类型转换成-number-之后在比较关系","第二坑：关系运算符会把其他数据类型转换成 number 之后在比较关系","第三坑：引用数据类型在隐式转换时会先转成-string，然后再转成-number-运算","第三坑：引用数据类型在隐式转换时会先转成 String，然后再转成 Number 运算","常见面试题如下","\"true\"","\"10\"","\"b\"","\"acb\"","'1,2'","'???'","\u002Fblog\u002F%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6(==)%E8%AF%A6%E8%A7%A3","\u002F\u002F [].valueOf().toString() -\u003E ''","\u002F\u002F 本质是栈中存储的地址相比较，所以是 false","一、规范文档中相等运算符的解释","一、规范文档中相等(\"==\")运算符的解释","二、规范文档中tonumber方法的解释","二、规范文档中toNumber方法的解释","三、规范文档中string转number方法的解释","三、规范文档中String转Number方法的解释","四、规范文档中toprimitive方法的解释","四、规范文档中ToPrimitive方法的解释","If x is "," and y is ",", return true.","Argument Type","传送门","input","\"default\"",", then\n\t","http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-call","0f155b39955f691c5994529fcfc790ba","Call",") is not Object, return ","Throw a ","TypeError"," exception."," is ","http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-algorithm-conventions","8e8fad81a2dd2be34ea4e590a7d8c1e9","Assert",": "," be «","\"toString\"","\"valueOf\"","»."," in ","\n\t\t\t","如果obj为原始值，直接返回；","否则调用 obj.valueOf()，如果执行结果是原始值，返回之；","否则调用obj.toString()，如果执行结果是原始值，返回之；","否则抛异常。","https:\u002F\u002Fwww.zhihu.com\u002Fquestion\u002F21484710\u002Fanswer\u002F52389636","https:\u002F\u002Fwww.zhihu.com\u002Fquestion\u002F61106507\u002Fanswer\u002F184310938","http:\u002F\u002Fes6.ruanyifeng.com\u002F#docs\u002Fspec#%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6","原型 Prototype","对象中的-super-关键字","对象中的 super 关键字","objectcreateproto-propertiesobject","Object.create(proto[, propertiesObject])"," q ","isPrototypeOf","obj2","getInfo","' '"," configurable","\n      ","rawDesc","set","\u002F\u002F 'john'","defineProperty","'from'","\n  value","p2","firstName"," names","'toString'","books","javascript-中奇葩的假值","boo","         ","        ","       ","  ")));
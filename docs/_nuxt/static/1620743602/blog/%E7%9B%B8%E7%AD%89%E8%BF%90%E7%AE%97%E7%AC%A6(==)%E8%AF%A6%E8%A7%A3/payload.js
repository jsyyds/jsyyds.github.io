__NUXT_JSONP__("/blog/%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6(==)%E8%AF%A6%E8%A7%A3", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi){return {data:[{article:{slug:Y,description:"到底发生了什么？",title:Y,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1620608968572-eb721f7851f6?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw0NHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",alt:Y,tags:[Z],toc:[{id:ap,depth:C,text:aq},{id:ar,depth:C,text:as},{id:at,depth:C,text:au},{id:av,depth:C,text:aw},{id:N,depth:C,text:N},{id:O,depth:ax,text:O},{id:P,depth:ax,text:P},{id:Q,depth:C,text:Q}],body:{type:"root",children:[{type:b,tag:e,props:{},children:[{type:a,value:"有时候我们会对某些语法的行为非常困惑，比如相等(\"==\")运算符。由于JS是一种弱类型语言，在没有使用严格相等(\"===\")运算符的情况下，相等运算符两侧的变量内部会发生隐式的类型转换，正是这个隐式类型转换导致相等运算符经常让人摸不着头脑。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"刚好最近看到阮一峰老师ES6教程的规范文档这一部分，然后参考知乎一些大神的讲解，形成此文，同时也是让自己梳理一下，可能有不对的地方，还望指正。"}]},{type:a,value:c},{type:b,tag:D,props:{id:ap},children:[{type:b,tag:h,props:{href:"#%E4%B8%80%E3%80%81%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3%E4%B8%AD%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E8%A7%A3%E9%87%8A",ariaHidden:p,tabIndex:q},children:[{type:b,tag:m,props:{className:[r,s]},children:[]}]},{type:a,value:aq}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"遇到实在是理解不了的问题，看规范文档最直接，"},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F",rel:[i,t,u],target:v},children:[{type:a,value:"《ECMAScript 2015规范文档》"}]},{type:a,value:"中讲解相等运算符的在"},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-abstract-equality-comparison",rel:[i,t,u],target:v},children:[{type:a,value:"7.2.12章节"}]},{type:a,value:"，这里直接贴出其算法的原文："}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Abstract Equality Comparison"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The comparison x == y, where x and y are values, produces true or false. Such a comparison is performed as follows:"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ReturnIfAbrupt(x)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ReturnIfAbrupt(y)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If Type(x) is the same as Type(y), then\n"},{type:b,tag:"ul",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"return the result of performing Strict Equality Comparison x === y."}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ay},{type:b,tag:I,props:{},children:[{type:a,value:az}]},{type:a,value:aA},{type:b,tag:I,props:{},children:[{type:a,value:_}]},{type:a,value:aB}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ay},{type:b,tag:I,props:{},children:[{type:a,value:_}]},{type:a,value:aA},{type:b,tag:I,props:{},children:[{type:a,value:az}]},{type:a,value:aB}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If Type(x) is Number and Type(y) is String, return the result of the comparison x == ToNumber(y)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If Type(x) is String and Type(y) is Number, return the result of the comparison ToNumber(x) == y."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If Type(x) is Boolean, return the result of the comparison ToNumber(x) == y."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If Type(y) is Boolean, return the result of the comparison x == ToNumber(y)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If Type(x) is either String, Number, or Symbol and Type(y) is Object, then return the result of the comparison x == ToPrimitive(y)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"If Type(x) is Object and Type(y) is either String, Number, or Symbol, then return the result of the comparison ToPrimitive(x) == y."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Return false."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"算法流程翻译过来就是下面的："}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 非正常值(比如x本身会抛出错误)，则中断执行"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 y 非正常值(同上)，则中断执行"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 的数据类型和 y 的数据类型相同，则返回以严格运算符执行判断的结果，即 x === y 的结果"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 是 null，y 是 undefined，返回 true"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 是 undefined，y 是 null，返回 true"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 的数据类型是 Number，y 的数据类型是 String，则将 y 转成 Number，然后返回 x == toNumber(y) 的结果"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 的数据类型是 String，y 的数据类型是 Number，则将 x 转成 Number，然后返回 toNumber(x) == y 的结果"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 的数据类型是 Boolean，则将 x 转成 Number，然后返回 toNumber(x) == y 的结果"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 y 的数据类型是 Boolean，则将 y 转成 Number，然后返回 x == toNumber(y) 的结果"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 的数据类型是 String、Number 或者 Symbol，y 的数据类型是Object，则将 y 转成原始类型，然后返回 x==toPrimitive(y) 的结果"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 x 的数据类型是 Object，y 的数据类型是 String、Number 或者 Symbol，则将 x 转成原始类型，然后返回 toPrimitive(x) == y 的结果"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"返回 false"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:ar},children:[{type:b,tag:h,props:{href:"#%E4%BA%8C%E3%80%81%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3%E4%B8%ADtonumber%E6%96%B9%E6%B3%95%E7%9A%84%E8%A7%A3%E9%87%8A",ariaHidden:p,tabIndex:q},children:[{type:b,tag:m,props:{className:[r,s]},children:[]}]},{type:a,value:as}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"上面提到的toNumber又是个啥呢，是不是又云里雾里的？没关系，规范文档里面写了的！！"},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-tonumber",rel:[i,t,u],target:v},children:[{type:a,value:"我们接着看"}]},{type:a,value:aC}]},{type:a,value:$},{type:b,tag:aa,props:{},children:[{type:b,tag:ab,props:{},children:[{type:b,tag:j,props:{},children:[{type:b,tag:E,props:{},children:[{type:a,value:"Argument Type"}]},{type:b,tag:E,props:{},children:[{type:a,value:aD}]}]}]},{type:b,tag:ac,props:{},children:[{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aE}]},{type:b,tag:f,props:{},children:[{type:a,value:"If argument is an abrupt completion, return argument. Otherwise return ToNumber(argument.[[value]])."}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ad}]},{type:b,tag:f,props:{},children:[{type:a,value:"Return NaN."}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ae}]},{type:b,tag:f,props:{},children:[{type:a,value:"Return +0."}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:af}]},{type:b,tag:f,props:{},children:[{type:a,value:"Return 1 if argument is true. Return +0 if argument is false."}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ag}]},{type:b,tag:f,props:{},children:[{type:a,value:"Return argument (no conversion)."}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ah}]},{type:b,tag:f,props:{},children:[{type:a,value:"See grammar and conversion algorithm below."}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ai}]},{type:b,tag:f,props:{},children:[{type:a,value:"Throw a TypeError exception."}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aj}]},{type:b,tag:f,props:{},children:[{type:a,value:"Apply the following steps:"},{type:b,tag:R,props:{},children:[]},{type:a,value:"    1. Let primValue be ToPrimitive(argument, hint Number)."},{type:b,tag:R,props:{},children:[]},{type:a,value:"    2. Return ToNumber(primValue)."}]}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"来来来，翻译走一波~"}]},{type:a,value:$},{type:b,tag:aa,props:{},children:[{type:b,tag:ab,props:{},children:[{type:b,tag:j,props:{},children:[{type:b,tag:E,props:{},children:[{type:a,value:"参数类型"}]},{type:b,tag:E,props:{},children:[{type:a,value:"结果"}]}]}]},{type:b,tag:ac,props:{},children:[{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"完成标志( 例如return、break、throw等)"}]},{type:b,tag:f,props:{},children:[{type:a,value:"如果参数是一个异常中断，就返回这个参数，否则就返回该参数转换成Number之后的数值"}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ad}]},{type:b,tag:f,props:{},children:[{type:a,value:"返回 NaN"}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ae}]},{type:b,tag:f,props:{},children:[{type:a,value:"返回 +0"}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:af}]},{type:b,tag:f,props:{},children:[{type:a,value:"如果参数是 true，返回 1；如果参数是 false，返回 +0"}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ag}]},{type:b,tag:f,props:{},children:[{type:a,value:"返回参数(不做转换)"}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ah}]},{type:b,tag:f,props:{},children:[{type:a,value:"看本文第三节"}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ai}]},{type:b,tag:f,props:{},children:[{type:a,value:"抛出一个TypeError异常"}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aj}]},{type:b,tag:f,props:{},children:[{type:a,value:"采用下述的步骤："},{type:b,tag:R,props:{},children:[]},{type:a,value:"    1. 利用ToPrimitive(argument,hint Number)的方式转成原始类型"},{type:b,tag:R,props:{},children:[]},{type:a,value:"    2. 将上述步骤的原始类型转成数值，即ToNumber(primValue)，并返回该数值"}]}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"等等好像又冒出来了个ToPrimitive，What？？？别急别急，一步一来，我们第四节来介绍它，先介绍String转Number。"}]},{type:a,value:c},{type:b,tag:D,props:{id:at},children:[{type:b,tag:h,props:{href:"#%E4%B8%89%E3%80%81%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3%E4%B8%ADstring%E8%BD%ACnumber%E6%96%B9%E6%B3%95%E7%9A%84%E8%A7%A3%E9%87%8A",ariaHidden:p,tabIndex:q},children:[{type:b,tag:m,props:{className:[r,s]},children:[]}]},{type:a,value:au}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"还是按照惯例，规范文档的"},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-tonumber-applied-to-the-string-type",rel:[i,t,u],target:v},children:[{type:a,value:aF}]},{type:a,value:"送上。规范文档里面东西有点多，就不复制了，这里简要的介绍一下。"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果字符串中只包含数字（包括前面带加号或负号的情况），则将其转换为十进制数值，即 \"1\" 会变成 1，\"123\" 会变成 123，而 \"011\" 会变成 11（注意：前导的零被忽略了）；"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果字符串中包含有效的浮点格式，如 \"1.1\"，则将其转换为对应的浮点数值（同样，也会忽略前导零）；"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果字符串中包含有效的十六进制格式，例如 \"0xf\"，则将其转换为相同大小的十进制整数值；"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果字符串是空的（不包含任何字符），则将其转换为 0；"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果字符串中包含除上述格式之外的字符，则将其转换为 NaN。"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:av},children:[{type:b,tag:h,props:{href:"#%E5%9B%9B%E3%80%81%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3%E4%B8%ADtoprimitive%E6%96%B9%E6%B3%95%E7%9A%84%E8%A7%A3%E9%87%8A",ariaHidden:p,tabIndex:q},children:[{type:b,tag:m,props:{className:[r,s]},children:[]}]},{type:a,value:aw}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"原文"},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-toprimitive",rel:[i,t,u],target:v},children:[{type:a,value:aF}]},{type:a,value:aC}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"ToPrimitive(input[, PreferredType])"}]}]},{type:a,value:$},{type:b,tag:aa,props:{},children:[{type:b,tag:ab,props:{},children:[{type:b,tag:j,props:{},children:[{type:b,tag:E,props:{},children:[{type:a,value:"Input Type"}]},{type:b,tag:E,props:{},children:[{type:a,value:aD}]}]}]},{type:b,tag:ac,props:{},children:[{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aE}]},{type:b,tag:f,props:{},children:[{type:a,value:"If input is an abrupt completion, return input. Otherwise return ToPrimitive(input.[[value]]) also passing the optional hint PreferredType."}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ad}]},{type:b,tag:f,props:{},children:[{type:a,value:F}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ae}]},{type:b,tag:f,props:{},children:[{type:a,value:F}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:af}]},{type:b,tag:f,props:{},children:[{type:a,value:F}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ag}]},{type:b,tag:f,props:{},children:[{type:a,value:F}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ah}]},{type:b,tag:f,props:{},children:[{type:a,value:F}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:ai}]},{type:b,tag:f,props:{},children:[{type:a,value:F}]}]},{type:b,tag:j,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aj}]},{type:b,tag:f,props:{},children:[{type:a,value:"Perform the steps following this table."}]}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"这个表格的东西不多，就不翻译了，说说Object的情况下的转换步骤。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"原文是下面是这样的："}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"When "},{type:b,tag:h,props:{href:J,rel:[i],dataToken:K},children:[{type:a,value:L}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:aG}]},{type:a,value:") is Object, the following steps are taken:"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:z},{type:b,tag:g,props:{},children:[{type:a,value:ak}]},{type:a,value:" was not passed, let "},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:o,props:{},children:[{type:a,value:aH}]},{type:a,value:A}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:"Else if "},{type:b,tag:g,props:{},children:[{type:a,value:ak}]},{type:a,value:" is hint String, let "},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:o,props:{},children:[{type:a,value:al}]},{type:a,value:A}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:"Else "},{type:b,tag:g,props:{},children:[{type:a,value:ak}]},{type:a,value:" is hint Number, let "},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:o,props:{},children:[{type:a,value:am}]},{type:a,value:A}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:G},{type:b,tag:g,props:{},children:[{type:a,value:S}]},{type:a,value:x},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-getmethod",rel:[i],dataToken:"b83620925a084f8e94740cd574a59d8b"},children:[{type:a,value:"GetMethod"}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:aG}]},{type:a,value:", @@toPrimitive)."}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:b,tag:h,props:{href:T,rel:[i],dataToken:U},children:[{type:a,value:V}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:S}]},{type:a,value:B}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:z},{type:b,tag:g,props:{},children:[{type:a,value:S}]},{type:a,value:" is not "},{type:b,tag:m,props:{style:W},children:[{type:a,value:_}]},{type:a,value:aI},{type:b,tag:n,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:G},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:x},{type:b,tag:h,props:{href:aJ,rel:[i],dataToken:aK},children:[{type:a,value:aL}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:S}]},{type:a,value:M},{type:b,tag:g,props:{},children:[{type:a,value:"input,"}]},{type:a,value:" «"},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:"»)."}]},{type:a,value:H},{type:b,tag:d,props:{},children:[{type:b,tag:h,props:{href:T,rel:[i],dataToken:U},children:[{type:a,value:V}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:B}]},{type:a,value:H},{type:b,tag:d,props:{},children:[{type:a,value:z},{type:b,tag:h,props:{href:J,rel:[i],dataToken:K},children:[{type:a,value:L}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:aM},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:A}]},{type:a,value:H},{type:b,tag:d,props:{},children:[{type:a,value:aN},{type:b,tag:m,props:{style:W},children:[{type:a,value:aO}]},{type:a,value:aP}]},{type:a,value:k}]}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:z},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:aQ},{type:b,tag:o,props:{},children:[{type:a,value:aH}]},{type:a,value:", let "},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:x},{type:b,tag:o,props:{},children:[{type:a,value:am}]},{type:a,value:A}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:"Return OrdinaryToPrimitive("},{type:b,tag:g,props:{},children:[{type:a,value:"input,hint"}]},{type:a,value:B}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"When the abstract operation OrdinaryToPrimitive is called with arguments O and hint, the following steps are taken:"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:d,props:{},children:[{type:b,tag:h,props:{href:aR,rel:[i],dataToken:aS},children:[{type:a,value:aT}]},{type:a,value:aU},{type:b,tag:h,props:{href:J,rel:[i],dataToken:K},children:[{type:a,value:L}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:an}]},{type:a,value:") is Object"}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:b,tag:h,props:{href:aR,rel:[i],dataToken:aS},children:[{type:a,value:aT}]},{type:a,value:aU},{type:b,tag:h,props:{href:J,rel:[i],dataToken:K},children:[{type:a,value:L}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:") is String and its value is either "},{type:b,tag:o,props:{},children:[{type:a,value:al}]},{type:a,value:" or "},{type:b,tag:o,props:{},children:[{type:a,value:am}]},{type:a,value:A}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:z},{type:b,tag:g,props:{},children:[{type:a,value:w}]},{type:a,value:aQ},{type:b,tag:o,props:{},children:[{type:a,value:al}]},{type:a,value:aI},{type:b,tag:n,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:G},{type:b,tag:g,props:{},children:[{type:a,value:ao}]},{type:a,value:aV},{type:b,tag:o,props:{},children:[{type:a,value:aW}]},{type:a,value:M},{type:b,tag:o,props:{},children:[{type:a,value:aX}]},{type:a,value:aY}]},{type:a,value:k}]}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:"Else,\n\t"},{type:b,tag:n,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:G},{type:b,tag:g,props:{},children:[{type:a,value:ao}]},{type:a,value:aV},{type:b,tag:o,props:{},children:[{type:a,value:aX}]},{type:a,value:M},{type:b,tag:o,props:{},children:[{type:a,value:aW}]},{type:a,value:aY}]},{type:a,value:k}]}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:"For each "},{type:b,tag:g,props:{},children:[{type:a,value:aZ}]},{type:a,value:a_},{type:b,tag:g,props:{},children:[{type:a,value:ao}]},{type:a,value:a_},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-list-and-record-specification-type",rel:[i],dataToken:"90658c313c2245d8b77dc5b219fdfbc1"},children:[{type:a,value:"List"}]},{type:a,value:" order, do\n\t"},{type:b,tag:n,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:G},{type:b,tag:g,props:{},children:[{type:a,value:X}]},{type:a,value:x},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-get-o-p",rel:[i],dataToken:"49855746eab7068f760ba357a4f221cf"},children:[{type:a,value:"Get"}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:an}]},{type:a,value:M},{type:b,tag:g,props:{},children:[{type:a,value:aZ}]},{type:a,value:B}]},{type:a,value:H},{type:b,tag:d,props:{},children:[{type:b,tag:h,props:{href:T,rel:[i],dataToken:U},children:[{type:a,value:V}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:X}]},{type:a,value:B}]},{type:a,value:H},{type:b,tag:d,props:{},children:[{type:a,value:z},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-iscallable",rel:[i],dataToken:"fa718e4eaa9769401e86ab0db3c11881"},children:[{type:a,value:"IsCallable"}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:X}]},{type:a,value:") is "},{type:b,tag:m,props:{style:W},children:[{type:a,value:p}]},{type:a,value:", then\n\t\t"},{type:b,tag:n,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:G},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:x},{type:b,tag:h,props:{href:aJ,rel:[i],dataToken:aK},children:[{type:a,value:aL}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:X}]},{type:a,value:M},{type:b,tag:g,props:{},children:[{type:a,value:an}]},{type:a,value:B}]},{type:a,value:a$},{type:b,tag:d,props:{},children:[{type:b,tag:h,props:{href:T,rel:[i],dataToken:U},children:[{type:a,value:V}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:B}]},{type:a,value:a$},{type:b,tag:d,props:{},children:[{type:a,value:z},{type:b,tag:h,props:{href:J,rel:[i],dataToken:K},children:[{type:a,value:L}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:aM},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:A}]},{type:a,value:H}]}]},{type:a,value:k}]}]},{type:a,value:k},{type:b,tag:d,props:{},children:[{type:a,value:aN},{type:b,tag:m,props:{style:W},children:[{type:a,value:aO}]},{type:a,value:aP}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{style:"text-indent:0;"},children:[{type:a,value:"NOTEWhen ToPrimitive is called with no hint, then it generally behaves as if the hint were Number. However, objects may over-ride this behaviour by defining a @@toPrimitive method. Of the objects defined in this specification only Date objects ("},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-date.prototype-@@toprimitive",rel:[i],dataToken:"096ed08160a887fee8c26e9f101c2ac6"},children:[{type:a,value:"see 20.3.4.45"}]},{type:a,value:") and Symbol objects ("},{type:b,tag:h,props:{href:"http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-symbol.prototype-@@toprimitive",rel:[i],dataToken:"e7ee250a1b2c31b29f7ddfcd4dc1968a"},children:[{type:a,value:"see 19.4.3.4"}]},{type:a,value:") over-ride the default ToPrimitive behaviour. Date objects treat no hint as if the hint were String."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"东西有点多，简而概之。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"JS引擎内部转换为原始值 ToPrimitive(obj,preferredType) 函数接受两个参数，第一个 obj 为被转换的对象，第二个 preferredType 为希望转换成的类型（默认为空，接受的值为 Number 或 String）。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在执行 ToPrimitive(obj,preferredType) 时如果第二个参数为空并且 obj 为 Date 的实例时，此时 preferredType 会被设置为 String，其他情况下 preferredType 都会被设置为 Number。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 preferredType 为 Number，ToPrimitive 执行过程如下："}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ba}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:bb}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:bc}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:bd}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如果 preferredType 为 String，将上面的第 2 步和第 3 步调换，即："}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:ba}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:bc}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:bb}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:bd}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:N},children:[{type:b,tag:h,props:{href:"#%E4%BA%94%E3%80%81%E4%B8%BE%E4%B8%AA%E4%BE%8B%E5%AD%90",ariaHidden:p,tabIndex:q},children:[{type:b,tag:m,props:{className:[r,s]},children:[]}]},{type:a,value:N}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"看上面的东西难免有点乏味，还是举几个例子会更形象。"}]},{type:a,value:c},{type:b,tag:be,props:{id:O},children:[{type:b,tag:h,props:{href:"#%E4%BE%8B%E5%AD%90%E4%B8%80",ariaHidden:p,tabIndex:q},children:[{type:b,tag:m,props:{className:[r,s]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"'true' == true"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"先不给出答案，我们一步一步看。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在这个相等运算中，左侧'true'的数据类型是String，右侧true的数据类型是Boolean。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"首先满足第9条，所以布尔值true转成数值1，返回'true'==1的值；"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"其次'true'==1又满足第7条，所以字符串true根据上面讲的规则，转换成Nan，故返回NaN==1；"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"然后NaN都不等于任何值，包括它本身，即 NaN == NaN 返回 false；"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"所以最后 'true' == true 返回 false。"}]},{type:a,value:c},{type:b,tag:be,props:{id:P},children:[{type:b,tag:h,props:{href:"#%E4%BE%8B%E5%AD%90%E4%BA%8C",ariaHidden:p,tabIndex:q},children:[{type:b,tag:m,props:{className:[r,s]},children:[]}]},{type:a,value:P}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"0 == null"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在这个相等运算中，左侧 0 的数据类型是 Number，右侧 null 的数据类型是 Null（规范文档 4.3.13 节规定，内部 Type 运算的结果，与 typeof 运算符无关），所以根据上面的规则，前面 11 条都不满足，直到第 12 步才返回 false。"}]},{type:a,value:c},{type:b,tag:D,props:{id:Q},children:[{type:b,tag:h,props:{href:"#%E5%85%AD%E3%80%81%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5",ariaHidden:p,tabIndex:q},children:[{type:b,tag:m,props:{className:[r,s]},children:[]}]},{type:a,value:Q}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:h,props:{href:bf,rel:[i,t,u],target:v},children:[{type:a,value:bf}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:h,props:{href:bg,rel:[i,t,u],target:v},children:[{type:a,value:bg}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:h,props:{href:bh,rel:[i,t,u],target:v},children:[{type:a,value:bh}]}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002F相等运算符(==)详解",extension:".md",createdAt:"2021-05-11T08:23:02.962Z",updatedAt:"2021-05-11T14:26:04.174Z"},tags:{javascript:{slug:Z,name:Z}},prev:{slug:bi,title:bi},next:{slug:"深入理解_CSS_盒模型",title:"深入理解 CSS 盒模型"}}],fetch:[],mutations:void 0}}("text","element","\n","li","p","td","em","a","nofollow","tr","\n\t","(","span","ol","code","true",-1,"icon","icon-link","noopener","noreferrer","_blank","hint"," be ","result","If ",".",").",2,"h2","th","Return input.","Let ","\n\t\t","strong","http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-ecmascript-data-types-and-values","461d087bacb36655ca6f94bd9b9c16f6","Type",", ","五、举个例子","例子一","例子二","六、参考链接","br","exoticToPrim","http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-returnifabrupt","3090b820a5755eb2fae5add52c2b9823","ReturnIfAbrupt","color:#555555;","method","相等运算符(==)详解","javascript","undefined","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","table","thead","tbody","Undefined","Null","Boolean","Number","String","Symbol","Object","PreferredType","\"string\"","\"number\"","O","methodNames","一、规范文档中相等运算符的解释","一、规范文档中相等(\"==\")运算符的解释","二、规范文档中tonumber方法的解释","二、规范文档中toNumber方法的解释","三、规范文档中string转number方法的解释","三、规范文档中String转Number方法的解释","四、规范文档中toprimitive方法的解释","四、规范文档中ToPrimitive方法的解释",3,"If x is ","null"," and y is ",", return true.","。","Result","Completion Record","传送门","input","\"default\"",", then\n\t","http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-call","0f155b39955f691c5994529fcfc790ba","Call",") is not Object, return ","Throw a ","TypeError"," exception."," is ","http:\u002F\u002Fwww.ecma-international.org\u002Fecma-262\u002F6.0\u002F#sec-algorithm-conventions","8e8fad81a2dd2be34ea4e590a7d8c1e9","Assert",": "," be «","\"toString\"","\"valueOf\"","».","name"," in ","\n\t\t\t","如果obj为原始值，直接返回；","否则调用 obj.valueOf()，如果执行结果是原始值，返回之；","否则调用obj.toString()，如果执行结果是原始值，返回之；","否则抛异常。","h3","https:\u002F\u002Fwww.zhihu.com\u002Fquestion\u002F21484710\u002Fanswer\u002F52389636","https:\u002F\u002Fwww.zhihu.com\u002Fquestion\u002F61106507\u002Fanswer\u002F184310938","http:\u002F\u002Fes6.ruanyifeng.com\u002F#docs\u002Fspec#%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6","隐式类型转换")));
__NUXT_JSONP__("/blog/this%20%E5%AF%B9%E8%B1%A1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az){return {data:[{article:{slug:X,description:"百变星君——this",title:X,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1477414348463-c0eb7f1359b6?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Y2hhbmdlfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",alt:X,tags:[Y],toc:[{id:ag,depth:ah,text:ai},{id:aj,depth:ah,text:ak},{id:P,depth:S,text:P},{id:Q,depth:S,text:Q},{id:al,depth:S,text:Z},{id:R,depth:S,text:R}],body:{type:"root",children:[{type:b,tag:am,props:{id:ag},children:[{type:b,tag:y,props:{ariaHidden:K,href:"#%E5%85%A8%E5%B1%80%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84-this",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ai}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:an,props:{},children:[{type:a,value:"不管是严格模式，还是非严格模式，全局环境中的 this 都指向全局对象。"}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"在浏览器中，它就是 window 对象。"}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,aq,ar]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:at}]},{type:a,value:"\n\n"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:au}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:"'abc'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,aq,ar]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\u002F\u002F 'abc'"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"在浏览器环境中，操作 this 对象，就是在操作 window 对象。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"虽然代码可以正常运行，但在实际开发中，很少在全局环境中使用 this。此时，建议显式的使用 window，语义更加清晰明确。"}]},{type:a,value:f},{type:b,tag:am,props:{id:aj},children:[{type:b,tag:y,props:{ariaHidden:K,href:"#%E5%87%BD%E6%95%B0%E4%B8%AD%E7%9A%84-this",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:ak}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:an,props:{},children:[{type:a,value:"函数中的 this 对象，取决于函数是如何被调用的。"}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"调用函数一般有四中方法，分别是："}]},{type:a,value:f},{type:b,tag:"ul",props:{},children:[{type:a,value:f},{type:b,tag:T,props:{},children:[{type:a,value:P}]},{type:a,value:f},{type:b,tag:T,props:{},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:T,props:{},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:T,props:{},children:[{type:a,value:R}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:U,props:{id:P},children:[{type:b,tag:y,props:{ariaHidden:K,href:"#%E7%AE%80%E5%8D%95%E8%B0%83%E7%94%A8",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:P}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"简单调用，就是直接使用一对括号来调用函数。示例代码直接调用 f，this 就是 window 对象。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这个结果肯定不是我们想要的，在严格模式下修改了这个设定，this 是 undefined。"}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:ao}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\u002F\u002F undefined"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这么修改在开发阶段就能修改错误，因为如果 this 是 undefined，此时再去操作 this 时，代码就会报错。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"在实际开发中，如果代码这么写，逻辑上肯定会出现问题，所以一般也不大会犯这样的错误。"}]},{type:a,value:f},{type:b,tag:U,props:{id:Q},children:[{type:b,tag:y,props:{ariaHidden:K,href:"#%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:Q}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:W}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"对象 obj 有一个属性 f，它的值是一个函数，此时调用 "},{type:b,tag:z,props:{},children:[{type:a,value:"obj.f()"}]},{type:a,value:" 方法，输出的 this 就是 obj 对象。也就是说，作为对象方法调用时，函数中的 this 指向的是对象本身。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"说明一个很多人都会遇到的坑："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:W}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:av}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"在方法 f 中，我们再声明一个 g，然后调用它。此时，在函数 g 中的 this，指向的是 window 对象。很多人认为这里的 this 应该是 obj 对象才符合人的思维。函数 g 还有可能是异步的，比如说是一个 ajax 请求。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"那如何修改这段代码，使得函数 g 中的 this 指向的是 obj 对象呢，可以使用 call 和 apply 方法。"}]},{type:a,value:f},{type:b,tag:U,props:{id:al},children:[{type:b,tag:y,props:{ariaHidden:K,href:"#call-%E5%92%8C-apply-%E8%B0%83%E7%94%A8",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:Z}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们用 call 和 apply 方法修改前面遇到的坑："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:W}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:aw},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:W}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n        g"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:"call"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\u002F\u002F this 指向 obj"}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\u002F\u002F g.apply(this)"}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"可以使用 "},{type:b,tag:z,props:{},children:[{type:a,value:"g.call(this)"}]},{type:a,value:" 或者 "},{type:b,tag:z,props:{},children:[{type:a,value:"g.apply(this)"}]},{type:a,value:" 在这个示例中它们的效果是一样的。"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"call() 和 apply() 方法的第一个参数是指定函数中的 this 对象，它们的区别在函数课程中讲解了。"}]},{type:a,value:f},{type:b,tag:U,props:{id:R},children:[{type:b,tag:y,props:{ariaHidden:K,href:"#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8",tabIndex:L},children:[{type:b,tag:c,props:{className:[M,N]},children:[]}]},{type:a,value:R}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:ac}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ae}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:ax}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"我们声明了一个函数 C，注意，它是大写的，这意味着我们把它当作一个类来使用了。它只有一条语句，就是给 this 对象添加了一个属性 a，值是字符串 'a'，然后用 new 创建了一个实例 o。这里需要注意，o 是一个普通对象，通过 new 一个 function 来创建一个普通对象，有点不可思议，但这个特性非常强大，是在 JS 中实现面向对象编程的基础。因为在 ES6 之前，JS 没有显式的类的概念，ES6 中新增的 class 也只是一种语法糖。大家可以暂时认为 class 语法是构造函数方式的进化版本，对象 o 就是构造函数 C 的返回值。如果没有显式的返回值，最后就返回 this。它相当于下面这段代码："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:ac}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,j,ay]},children:[{type:a,value:az}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ae}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:ax}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"this 是可以省略的，所以如果最后返回的是其他对象，那 o 的值就是这个对象，比如这段代码："}]},{type:a,value:f},{type:b,tag:C,props:{className:[D]},children:[{type:b,tag:E,props:{className:[F,G]},children:[{type:b,tag:z,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:"\n    a"},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:":"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:"'b'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:y}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,I]},children:[{type:a,value:ac}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,j,ay]},children:[{type:a,value:az}]},{type:a,value:" obj\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:J}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ae}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\u002F\u002F 'b'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,q]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,p,h,n]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"o "},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:ap}]},{type:a,value:" obj"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:at}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"这里再强调一下，如果 C 是作为普通函数使用，那它里面的 this 指向的是全局对象。如果它没有显式的返回值，默认返回的是 undefined。如果 C 是作为构造函数使用，那它里面的 this 就是实例对象，如果它没有显式的返回值，默认返回的是 this 对象。"}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fthis 对象",extension:".md",createdAt:"2021-05-27T05:44:01.578Z",updatedAt:"2021-05-27T05:49:08.419Z"},tags:{javascript:{slug:Y,name:Y}},prev:{slug:"Array.prototype.slice.call()-方法详解",title:"Array.prototype.slice.call() 方法详解"},next:{slug:"async-await-的含义和用法",title:"async\u002Fawait 的含义和用法"}}],fetch:[],mutations:void 0}}("text","element","span","token","punctuation","\n"," ","function","(","keyword",")","console",".","property-access","p","method","class-name","operator","comment","this","{","\n    ","}","log","a","code","=","f","div","nuxt-content-highlight","pre","language-js","line-numbers","\n        ","string","let","true",-1,"icon","icon-link","C","简单调用","对象方法调用","构造函数调用",3,"li","h3"," obj ","\u002F\u002F obj","this 对象","javascript","call 和 apply 调用",";","\nobj","g","constant","'a'"," o ","new","o","全局环境中的-this",2,"全局环境中的 this","函数中的-this","函数中的 this","call-和-apply-调用","h2","strong","'use strict'","===","dom","variable","window","\u002F\u002F true","abc","\u002F\u002F Window","\n            ","\u002F\u002F 'a'","control-flow","return")));
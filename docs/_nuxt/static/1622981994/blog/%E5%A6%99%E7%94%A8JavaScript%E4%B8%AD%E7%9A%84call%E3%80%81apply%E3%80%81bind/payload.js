__NUXT_JSONP__("/blog/%E5%A6%99%E7%94%A8JavaScript%E4%B8%AD%E7%9A%84call%E3%80%81apply%E3%80%81bind", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm){return {data:[{article:{slug:"妙用JavaScript中的call、apply、bind",description:"妙、妙、妙啊！",title:aA,img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1621610070598-942dd697cc7c?ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw4NHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",alt:aA,tags:[am],toc:[{id:ac,depth:an,text:ac},{id:aB,depth:aC,text:aD},{id:aE,depth:aC,text:aF},{id:aG,depth:an,text:aH},{id:aI,depth:an,text:aJ}],body:{type:"root",children:[{type:b,tag:ao,props:{id:ac},children:[{type:b,tag:U,props:{ariaHidden:V,href:"#call%E3%80%81apply",tabIndex:W},children:[{type:b,tag:c,props:{className:[X,Y]},children:[]}]},{type:a,value:ac}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"在 JavaScript 中，call 和 apply 都是为了改变某个函数运行时的上下文（context）而存在的。换句话说，就是为了改变函数体内部 this 的指向。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"JavaScript 的一大特点是，函数存在"},{type:b,tag:J,props:{},children:[{type:a,value:"定义时上下文"}]},{type:a,value:"和"},{type:b,tag:J,props:{},children:[{type:a,value:"运行时上下文"}]},{type:a,value:"以及"},{type:b,tag:J,props:{},children:[{type:a,value:"上下文是可以改变的"}]},{type:a,value:"这样的概念。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"先来一个栗子："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:"\n\nfruits"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ap}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"red\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,M,h]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"My color is \""}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"+"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"color"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" apple "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"new"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:aK}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\u002F\u002F My color is red"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"但是如果我们有一个对象 "},{type:b,tag:A,props:{},children:[{type:a,value:"banana = {color:\"yellow\"}"}]},{type:a,value:"，我们不想对它重新定义 say 方法，那么我们可以通过 call 或 apply 用 apple 的 say 方法："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" banana "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aL},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"yellow\""}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:aN}]},{type:a,value:aq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aM},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:aN}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"所以，可以看出 call 和 apply 是为了动态改变 this 而出现的，当一个 object 没有某个方法（本栗子中 banana 没有 say 方法），但是其他的有（本栗子中 apple 有 say 方法），我们可以借助 call 或 apply 用其他对象的方法来操作。"}]},{type:a,value:f},{type:b,tag:ar,props:{},children:[]},{type:a,value:f},{type:b,tag:aO,props:{id:aB},children:[{type:b,tag:U,props:{ariaHidden:V,href:"#call%E3%80%81apply-%E7%9A%84%E5%8C%BA%E5%88%AB",tabIndex:W},children:[{type:b,tag:c,props:{className:[X,Y]},children:[]}]},{type:a,value:aD}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"对于 call、apply 二者而言，作用完全一样，只是接收参数的方式不太一样。例如，有一个函数定义如下："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,M,h]},children:[{type:a,value:Z}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"就可以通过如下方式来调用："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:" arg1"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\nfunc"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:as},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"其中 this 是你想指定的上下文，他可以是任何一个 JavaScript 对象（JavaScript 中一切皆对象），call 需要把参数"},{type:b,tag:J,props:{},children:[{type:a,value:"按顺序传递"}]},{type:a,value:"进去，而 apply 则是"},{type:b,tag:J,props:{},children:[{type:a,value:"把参数放在数组里"}]},{type:a,value:"。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"JavaScript 中，某个函数的参数数量是不固定的，因此要说适用条件的话，当你的参数是明确知道数量时用 call，而不确定的时候用 apply，然后把参数 push 进数组传递进去。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"当参数数量不确定时，函数内部也可以通过 arguments 这个伪数组来遍历所有的参数。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"为了巩固加深记忆，下面列举一些常用用法："}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"数组之间追加"}]}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" array1 "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"12"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"foo\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"name"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"Joe\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"2458"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:af}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" array2 "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"Doe\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"555"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"100"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:af}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,R,y]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:"push"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"array1"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:" array2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\u002F\u002F array1 的值为 [12, \"foo\", {name: \"Joe\"}, -2458, \"Doe\", 555, 100]"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"获取数组中的最大值和最小值"}]}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" numbers "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:ae}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:af}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" maxInNumbers "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,R,y]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,R,y]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:" numbers"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:aV}]},{type:a,value:"\n    maxInNumbers "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,R,y]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,R,y]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:av}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:at}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:aV}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"number 本身没有 max 方法，但是 Math 有，我们就可以借助 call 或者 apply 使用其方法。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"验证是否是数组（前提是 toString() 方法没有被重写过）"}]}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"isArray"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,m,aW]},children:[{type:a,value:aX}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:"Object"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:"toString"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"==="}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"'[object Array]'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:b,tag:J,props:{},children:[{type:a,value:"类（伪）数组使用数组方法"}]}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" domNodes "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,R,y]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:aY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,"dom","variable"]},children:[{type:a,value:"document"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"*\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"JavaScript 中存在一种名为伪数组的对象结构。比较特别的是"},{type:b,tag:J,props:{},children:[{type:a,value:a_}]},{type:a,value:"对象，还有像调用"},{type:b,tag:J,props:{},children:[{type:a,value:aZ}]},{type:a,value:"、"},{type:b,tag:J,props:{},children:[{type:a,value:"document.childNodes"}]},{type:a,value:"之类的，它们返回的 NodeList 对象都属于伪数组。不能应用 Array 下的 push、pop 等方法。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"但是我们能通过 Array.prototype.slice.call 转换为真正的数组的带有 length 属性的对象，这样 domNodes 就可以应用 Array 下的所有方法了。"}]},{type:a,value:f},{type:b,tag:aO,props:{id:aE},children:[{type:b,tag:U,props:{ariaHidden:V,href:"#%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%BF%90%E7%94%A8-call%E3%80%81apply",tabIndex:W},children:[{type:b,tag:c,props:{className:[X,Y]},children:[]}]},{type:a,value:aF}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"下面就借用一道面试题，来更深入的去理解下 call 和 apply。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"定义一个 log 方法，让它可以代理 console.log 方法，常见的解决方法是："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:a$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:";"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ai}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ai}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"上面的方法可以解决最基本的需求，但是当传入参数的个数是不确定的时候，上面的方法就失效了，这个时候就可以考虑使用 call 或者 apply，注意这里"},{type:b,tag:J,props:{},children:[{type:a,value:"传入多少个参数是不确定的"}]},{type:a,value:"，所以使用 apply 是最好的，方法如下："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:" arguments"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ai}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:ba}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\u002F\u002F 1 2"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"接下来的要求是给每一个 log 消息添加一个 \"(app)\" 的前缀，比如："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\"hello world\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\u002F\u002F (app)hello world"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"该怎么做比较优雅呢？这个时候需要想到 arguments 参数是个伪数组，通过 Array.prototype.slice.call 转化为标准数组，在使用数组方法 unshift，像这样："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" args "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,y]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:aY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n    args"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:"unshift"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"'(app)'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"\n\n    "},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:" args"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:ar,props:{},children:[]},{type:a,value:f},{type:b,tag:ao,props:{id:aG},children:[{type:b,tag:U,props:{ariaHidden:V,href:"#bind-%E8%AF%A6%E8%A7%A3",tabIndex:W},children:[{type:b,tag:c,props:{className:[X,Y]},children:[]}]},{type:a,value:aH}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"说完了 call 和 apply，再来说说 bind。bind() 方法与 call 和 apply 很相似，也是可以改变函数体内 this 的指向。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"MDN 的解释是：bind() 方法会创建一个新函数，称为绑定函数，当调用这个绑定函数时，绑定函数会以创建它时传入 bind() 方法的第一个参数作为 this，传入 bind() 方法的第二个以及以后的参数加上绑定函数运行时本身的参数按照顺序作为原函数的参数来调用原函数。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"直接来看看具体如何使用，在常见的单体模式中，通常我们会使用 _this、that、self 等保存 this，这样我们可以在改变了上下文之后继续引用到它。像这样："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,M,h]},children:[{type:a,value:bc}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" _this "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bd}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:be}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:bh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bi}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"_this"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:ai}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"由于 JavaScript 特有的机制，上下文环境在 eventBind:function(){} 过渡到 $('.someClass').on('click',function(event){}) 发生了改变，上述使用变量保存 this 这些方式都是有用的，也没有什么问题。当然使用 bind() 可以更加优雅的解决这个问题："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,M,h]},children:[{type:a,value:bc}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bd}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:be}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:bh}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bi}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"在上述代码里，bind() 创建了一个函数，当这个 click 事件绑定被调用的时候，它的 this 关键词会被设置成被传入的值（这里指调用 bind() 时传入的参数）。因此，这里我们传入想要的上下文 this（其实就是 foo）到 bind() 函数中。然后，当回调函数被执行的时候，this 便指向 foo 对象。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"再来一个简单的栗子："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,M,h]},children:[{type:a,value:aa}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:bj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\u002F\u002F undefined"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\u002F\u002F 3"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"这里我们创建了一个新的函数 func，当使用 bind() 创建一个绑定函数之后，它被执行的时候，它的 this 会被设置成 foo，而不是像我们调用 bar() 时的全局作用域。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"有个有趣的问题，如果连续 bind() 两次，亦或者时连续 bind() 三次那么输出的值时什么呢？像这样："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,M,h]},children:[{type:a,value:aa}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:bj}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" sed "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"4"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bl}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" fiv "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:ax},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"fiv"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:bl}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"答案是，两次都仍将输出 3，而非期待中的 4 和 5。原因是，在 JavaScript 中，多次 bind() 是无效的。更深层次的原因，bind() 的实现，相当于使用函数在内部包了一个 call\u002Fapply，第二次 bind() 相当于再包住第一次 bind()，故第二次以后的 bind 是无法生效的。"}]},{type:a,value:f},{type:b,tag:ar,props:{},children:[]},{type:a,value:f},{type:b,tag:ao,props:{id:aI},children:[{type:b,tag:U,props:{ariaHidden:V,href:"#call%E3%80%81apply%E3%80%81bind-%E6%AF%94%E8%BE%83",tabIndex:W},children:[{type:b,tag:c,props:{className:[X,Y]},children:[]}]},{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"那么 call、apply、bind 三者相比较，之间又有什么异同呢？何时使用 call、apply，何时使用 bind 呢？简单的一个栗子："}]},{type:a,value:f},{type:b,tag:B,props:{className:[C]},children:[{type:b,tag:D,props:{className:[E,F]},children:[{type:b,tag:A,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:" obj "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"81"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:w}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:t}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,M,h]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,m,aW]},children:[{type:a,value:aX}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:aw}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:az}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"obje"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:az}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,v,y]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,n,h,l]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:az}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"三个输出都是 81，但是注意看使用 bind() 方法的时候，它后面多了对括号。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"也就是说，区别是当你希望改变上下文环境后并非立即执行，而是回调执行的时候，使用 bind() 方法。而 call\u002Fapply 则会立即执行函数。"}]},{type:a,value:f},{type:b,tag:p,props:{},children:[{type:a,value:"再总结一下："}]},{type:a,value:f},{type:b,tag:"ul",props:{},children:[{type:a,value:f},{type:b,tag:al,props:{},children:[{type:a,value:"call、apply、bind 三者都是用来改变函数的 this 对象的指向的"}]},{type:a,value:f},{type:b,tag:al,props:{},children:[{type:a,value:"call、apply、bind 三者第一个参数都是 this 要指向的对象，也就是想指定的上下文"}]},{type:a,value:f},{type:b,tag:al,props:{},children:[{type:a,value:"call、apply、bind 三者都可以利用后续参数传参"}]},{type:a,value:f},{type:b,tag:al,props:{},children:[{type:a,value:"bind 是返回对应函数，便于稍后调用；call、apply则是立即调用"}]},{type:a,value:f}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002F妙用JavaScript中的call、apply、bind",extension:".md",createdAt:"2021-05-20T12:08:53.645Z",updatedAt:"2021-05-23T14:57:59.044Z"},tags:{javascript:{slug:am,name:am}},prev:{slug:"JS开发的你，真的会用-console-吗？",title:"JS 开发的你，真的会用 console 吗？"},next:{slug:bm,title:bm}}],fetch:[],mutations:void 0}}("text","element","span","token","punctuation","\n"," ","function","(",")",".","property-access","keyword","method","operator","p",",","{","}","=","number","console","var","comment","class-name","log","code","div","nuxt-content-highlight","pre","language-js","line-numbers",":","string","\n    ","strong","this","bind","function-variable","\n        ","call","apply","\n\n","known-class-name","1","foo","a","true",-1,"icon","icon-link","func","parameter"," foo ","bar","\n    x","call、apply","say","[","]","Math","obj","\u002F\u002F 1","\n            ","getX","li","javascript",2,"h2","prototype","\napple","hr"," arg2","-","Array","5","x"," func "," bar","\u002F\u002F 81","妙用 JavaScript 中的 call、apply、bind","call、apply-的区别",3,"call、apply 的区别","深入理解运用-call、apply","深入理解运用 call、apply","bind-详解","bind 详解","call、apply、bind-比较","call、apply、bind 比较","fruits","\n    color","banana","\u002F\u002F My color is yellow","h3","arg1","ptototype","458","120","215","max","\u002F\u002F 458","control-flow","return","slice","getElementsByTagName","arguments","msg","2","\n    bar","eventBind","$","'.someClass'","on","'click'","event","\u002F\u002F Act on the event","3","sed","\u002F\u002F ?","清除浮动的四种方法以及优缺点")));